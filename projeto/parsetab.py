
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALMINUS_EQTIMES_EQPLUS_EQDIVIDE_EQMOD_EQBITWISE_AND_EQBITWISE_OR_EQBITWISE_XOR_EQURSHIFT_EQLSHIFT_EQRSHIFT_EQleftORleftANDleftBITWISE_ORleftBITWISE_XORleftBITWISE_ANDleftEQNEQleftLTGTLEQGEQleftLSHIFTRSHIFTURSHIFTleftPLUSMINUSleftTIMESDIVIDEMODULEleftLINCREMENTLDECREMENTUPLUSUMINUSNOTleftRINCREMENTRDECREMENTABSTRACT AND ASSERT BIN_NUMBER BITWISE_AND BITWISE_AND_EQ BITWISE_NOT BITWISE_OR BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_EQ BREAK BYTE_NUMBER CASE CATCH CHAR CLASS COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQ DO DOT DOUBLE_NUMBER ELSE ENUM EQ EQUAL EXTENDS FINAL FINALLY FLOAT_NUMBER FOR GEQ GOTO GT HEXA_NUMBER ID IF IMPLEMENTS IMPORT INCREMENT INSTANCEOF INTERFACE INT_NUMBER LBRACKET LCHAV LEQ LONG_NUMBER LPAREN LSHIFT LSHIFT_EQ LT MINUS MINUS_EQ MODULE MOD_EQ NATIVE NEQ NEW NOT OCTAL_NUMBER OR PACKAGE PLUS PLUS_EQ POT PRIVATE PROTECTED PUBLIC RBRACKET RCHAV RETURN RPAREN RSHIFT RSHIFT_EQ SEMICOLON SHORT STATIC STRICTFP STRING SUPER SWITCH SYNCHRONIZED TERNARY THIS THROW THROWS TIMES TIMES_EQ TRANSIENT TRY TYPE_BOOLEAN TYPE_BYTE TYPE_CHAR TYPE_DOUBLE TYPE_FLOAT TYPE_INT TYPE_LONG TYPE_STRING TYPE_VOID URSHIFT URSHIFT_EQ VOLATILE WHILE program : class class : visibility classmodifier CLASS ID EXTENDS ID LCHAV membros RCHAVclass : visibility classmodifier CLASS ID LCHAV membros RCHAV class : visibility classmodifier CLASS ID IMPLEMENTS LCHAV membros RCHAV visibility : PUBLIC visibility : PRIVATE visibility : PROTECTED visibility : classmodifier : classmodifier : ABSTRACTclassmodifier : FINALclassmodifier : PACKAGEmembros : membromembros : membro membrosmembro : atributemembro : functionatribute : visibility atributemodifier type ID SEMICOLONatribute : visibility atributemodifier type ID EQUAL expression SEMICOLONatributemodifier : atributemodifier : STATICatributemodifier : FINALfunction : signature bodysignature : visibility atributemodifier type ID LPAREN sigparams RPAREN signature : visibility atributemodifier type brackets_expression ID LPAREN sigparams RPAREN sigparams : type ID  sigparams : type ID COMMA sigparamsbody : LCHAV stms RCHAVstms : stm stms : stm stms stm : expression SEMICOLONstm : WHILE LPAREN expression RPAREN bodyorstmstm : DO bodyorstm WHILE LPAREN expression RPAREN SEMICOLON stm : FOR LPAREN expression_for SEMICOLON expression SEMICOLON expression RPAREN bodyorstmstm : IF LPAREN expression RPAREN bodyorstmstm : IF LPAREN expression RPAREN bodyorstm ELSE bodyorstmstm : IF LPAREN expression RPAREN bodyorstm ELSE IF bodyorstmstm : SEMICOLON stm : atributemodifier type ID SEMICOLONstm : atributemodifier type ID EQUAL expression SEMICOLONstm : atributemodifier type ID LBRACKET RBRACKET SEMICOLONstm : atributemodifier type LBRACKET RBRACKET ID SEMICOLONstm : atributemodifier type LBRACKET RBRACKET ID EQUAL chav_exp SEMICOLONstm : atributemodifier type ID LBRACKET RBRACKET EQUAL expression SEMICOLONstm : atributemodifier type ID LBRACKET RBRACKET EQUAL chav_exp SEMICOLONstm : atributemodifier type LBRACKET RBRACKET ID LBRACKET RBRACKET SEMICOLONstm : atributemodifier type LBRACKET RBRACKET ID LBRACKET RBRACKET EQUAL chav_exp SEMICOLONstm : RETURN expression SEMICOLONstm : RETURN SEMICOLONbodyorstm : body expression_for : type ID EQUAL expression   expression_for : ID EQUAL expression   expression : operator  expression : call  expression : FLOAT_NUMBER  expression : DOUBLE_NUMBER  expression : INT_NUMBER  expression : STRING  expression : ID  expression : NEW type LPAREN params_call RPAREN expression : NEW type LBRACKET expression RBRACKET operator : expression TIMES expressionoperator : expression DIVIDE expressionoperator : expression MODULE expressionoperator : expression PLUS expressionoperator : expression MINUS expressionoperator : ID EQUAL expressionoperator : ID MINUS_EQ expressionoperator : ID TIMES_EQ expressionoperator : ID PLUS_EQ expressionoperator : ID DIVIDE_EQ expressionoperator : ID MOD_EQ expressionoperator : ID BITWISE_AND_EQ expressionoperator : ID BITWISE_OR_EQ expressionoperator : ID BITWISE_XOR_EQ expressionoperator : ID URSHIFT_EQ expressionoperator : ID LSHIFT_EQ expressionoperator : ID RSHIFT_EQ expressionoperator : expression LEQ expressionoperator : expression GEQ expressionoperator : expression LT expressionoperator : expression GT expressionoperator : expression NEQ expressionoperator : expression EQ expressionoperator : expression AND expressionoperator : expression OR expressionoperator : expression BITWISE_AND expressionoperator : expression BITWISE_OR expressionoperator : expression BITWISE_XOR expressionoperator : unaryoperatorprefx IDoperator : ID unaryoperatorsufxoperator : expression operatorbittobit\n    unaryoperatorprefx : INCREMENT %prec LINCREMENT\n                        | DECREMENT %prec LDECREMENT\n                        | MINUS %prec UMINUS\n                        | PLUS %prec UPLUS\n                        | NOT\n    \n    unaryoperatorsufx : INCREMENT %prec RINCREMENT\n                        | DECREMENT %prec RDECREMENT\n    \n    operatorbittobit : URSHIFT\n                        | LSHIFT\n                        | RSHIFT\n    \n     brackets_expression : LBRACKET RBRACKET brackets_expression : LBRACKET INT_NUMBER RBRACKET brackets_expression : LBRACKET ID RBRACKET type : primitivetypes\n               primitivetypes : TYPE_INT\n                        | TYPE_FLOAT\n                        | TYPE_DOUBLE\n                        | TYPE_BYTE\n                        | TYPE_BOOLEAN\n                        | TYPE_CHAR\n                        | TYPE_STRING\n                        | TYPE_LONG\n                        | TYPE_VOID\n\n     call : ID LPAREN params_call RPAREN call : ID LPAREN RPAREN params_call : expression COMMA params_call params_call : expressionchav_exp : LCHAV RCHAVchav_exp : LCHAV expression_chav\n    expression_chav : expression COMMA expression_chavexpression_chav : expression RCHAVexpression_chav :  expression COMMA RCHAV'
    
_lr_action_items = {'PUBLIC':([0,14,19,20,21,23,24,30,74,123,192,],[4,4,4,-15,-16,4,4,-22,-27,-17,-18,]),'PRIVATE':([0,14,19,20,21,23,24,30,74,123,192,],[5,5,5,-15,-16,5,5,-22,-27,-17,-18,]),'PROTECTED':([0,14,19,20,21,23,24,30,74,123,192,],[6,6,6,-15,-16,6,6,-22,-27,-17,-18,]),'ABSTRACT':([0,3,4,5,6,],[-8,8,-5,-6,-7,]),'FINAL':([0,3,4,5,6,14,17,19,20,21,23,24,30,31,46,48,74,76,99,120,123,169,184,192,196,201,214,215,218,221,224,231,232,233,237,239,240,246,],[-8,9,-5,-6,-7,-8,27,-8,-15,-16,-8,-8,-22,27,27,-37,-27,-30,-49,-48,-17,-47,-38,-18,-31,-34,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'PACKAGE':([0,3,4,5,6,],[-8,10,-5,-6,-7,]),'CLASS':([0,3,4,5,6,7,8,9,10,],[-8,-9,-5,-6,-7,11,-10,-11,-12,]),'$end':([1,2,28,69,70,],[0,-1,-3,-4,-2,]),'STATIC':([4,5,6,14,17,19,20,21,23,24,30,31,46,48,74,76,99,120,123,169,184,192,196,201,214,215,218,221,224,231,232,233,237,239,240,246,],[-5,-6,-7,-8,26,-8,-15,-16,-8,-8,-22,26,26,-37,-27,-30,-49,-48,-17,-47,-38,-18,-31,-34,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'TYPE_INT':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,169,175,184,192,196,201,208,214,215,218,221,224,231,232,233,237,239,240,246,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,36,-20,-21,-22,-19,-19,-37,36,36,-27,-30,-49,36,-48,-17,36,-47,36,-38,-18,-31,-34,36,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'TYPE_FLOAT':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,169,175,184,192,196,201,208,214,215,218,221,224,231,232,233,237,239,240,246,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,37,-20,-21,-22,-19,-19,-37,37,37,-27,-30,-49,37,-48,-17,37,-47,37,-38,-18,-31,-34,37,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'TYPE_DOUBLE':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,169,175,184,192,196,201,208,214,215,218,221,224,231,232,233,237,239,240,246,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,38,-20,-21,-22,-19,-19,-37,38,38,-27,-30,-49,38,-48,-17,38,-47,38,-38,-18,-31,-34,38,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'TYPE_BYTE':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,169,175,184,192,196,201,208,214,215,218,221,224,231,232,233,237,239,240,246,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,39,-20,-21,-22,-19,-19,-37,39,39,-27,-30,-49,39,-48,-17,39,-47,39,-38,-18,-31,-34,39,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'TYPE_BOOLEAN':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,169,175,184,192,196,201,208,214,215,218,221,224,231,232,233,237,239,240,246,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,40,-20,-21,-22,-19,-19,-37,40,40,-27,-30,-49,40,-48,-17,40,-47,40,-38,-18,-31,-34,40,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'TYPE_CHAR':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,169,175,184,192,196,201,208,214,215,218,221,224,231,232,233,237,239,240,246,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,41,-20,-21,-22,-19,-19,-37,41,41,-27,-30,-49,41,-48,-17,41,-47,41,-38,-18,-31,-34,41,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'TYPE_STRING':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,169,175,184,192,196,201,208,214,215,218,221,224,231,232,233,237,239,240,246,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,42,-20,-21,-22,-19,-19,-37,42,42,-27,-30,-49,42,-48,-17,42,-47,42,-38,-18,-31,-34,42,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'TYPE_LONG':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,169,175,184,192,196,201,208,214,215,218,221,224,231,232,233,237,239,240,246,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,43,-20,-21,-22,-19,-19,-37,43,43,-27,-30,-49,43,-48,-17,43,-47,43,-38,-18,-31,-34,43,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'TYPE_VOID':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,169,175,184,192,196,201,208,214,215,218,221,224,231,232,233,237,239,240,246,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,44,-20,-21,-22,-19,-19,-37,44,44,-27,-30,-49,44,-48,-17,44,-47,44,-38,-18,-31,-34,44,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'ID':([11,13,31,34,35,36,37,38,39,40,41,42,43,44,46,48,55,63,64,65,66,67,68,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,127,149,169,170,171,173,176,177,179,180,182,184,185,187,189,196,199,201,211,214,215,216,218,221,224,227,231,232,233,237,239,240,241,246,],[12,16,54,71,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,54,-37,54,-95,-94,122,-92,-93,-96,126,129,-27,-30,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-49,150,54,152,54,54,54,54,54,54,54,54,54,54,54,54,54,-48,54,-102,181,-47,54,54,193,-103,-104,54,54,54,-38,54,204,54,-31,54,-34,54,-39,-40,54,-41,-32,-35,54,-36,-43,-44,-45,-42,-33,54,-46,]),'EXTENDS':([12,],[13,]),'LCHAV':([12,15,16,22,50,178,183,194,209,213,216,219,223,230,238,],[14,23,24,31,31,31,31,-23,-24,31,227,227,31,31,227,]),'IMPLEMENTS':([12,],[15,]),'RCHAV':([18,19,20,21,29,30,32,33,45,46,48,54,56,57,58,59,60,61,74,75,76,93,94,95,96,99,115,117,118,120,122,123,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,154,155,156,157,158,159,160,161,162,163,164,165,167,169,184,188,192,196,201,206,207,214,215,218,221,224,227,231,232,233,236,237,239,240,241,246,],[28,-13,-15,-16,-14,-22,69,70,74,-28,-37,-58,-52,-53,-54,-55,-56,-57,-27,-29,-30,-91,-99,-100,-101,-49,-90,-97,-98,-48,-89,-17,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-116,-47,-38,-115,-18,-31,-34,-59,-60,-39,-40,-41,-32,-35,234,-36,-43,-44,242,-45,-42,-33,245,-46,]),'WHILE':([31,46,48,74,76,98,99,120,169,184,196,201,214,215,218,221,224,231,232,233,237,239,240,246,],[49,49,-37,-27,-30,147,-49,-48,-47,-38,-31,-34,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'DO':([31,46,48,74,76,99,120,169,184,196,201,214,215,218,221,224,231,232,233,237,239,240,246,],[50,50,-37,-27,-30,-49,-48,-47,-38,-31,-34,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'FOR':([31,46,48,74,76,99,120,169,184,196,201,214,215,218,221,224,231,232,233,237,239,240,246,],[51,51,-37,-27,-30,-49,-48,-47,-38,-31,-34,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'IF':([31,46,48,74,76,99,120,169,184,196,201,213,214,215,218,221,224,231,232,233,237,239,240,246,],[52,52,-37,-27,-30,-49,-48,-47,-38,-31,-34,223,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'SEMICOLON':([31,46,47,48,54,55,56,57,58,59,60,61,71,74,76,93,94,95,96,99,115,117,118,119,120,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,152,154,155,156,157,158,159,160,161,162,163,164,165,167,169,172,184,188,196,198,200,201,202,203,204,206,207,210,212,214,215,218,221,224,225,226,228,229,231,232,233,234,235,237,239,240,242,243,244,245,246,],[48,48,76,-37,-58,120,-52,-53,-54,-55,-56,-57,123,-27,-30,-91,-99,-100,-101,-49,-90,-97,-98,169,-48,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,180,184,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-116,-47,192,-38,-115,-31,211,-51,-34,214,215,218,-59,-60,221,-50,-39,-40,-41,-32,-35,232,233,237,239,-36,-43,-44,-119,-120,-45,-42,-33,-122,246,-121,-123,-46,]),'RETURN':([31,46,48,74,76,99,120,169,184,196,201,214,215,218,221,224,231,232,233,237,239,240,246,],[55,55,-37,-27,-30,-49,-48,-47,-38,-31,-34,-39,-40,-41,-32,-35,-36,-43,-44,-45,-42,-33,-46,]),'FLOAT_NUMBER':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,169,170,171,179,180,182,184,185,189,196,199,201,211,214,215,216,218,221,224,227,231,232,233,237,239,240,241,246,],[58,58,-37,58,-27,-30,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-49,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-48,58,-47,58,58,58,58,58,-38,58,58,-31,58,-34,58,-39,-40,58,-41,-32,-35,58,-36,-43,-44,-45,-42,-33,58,-46,]),'DOUBLE_NUMBER':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,169,170,171,179,180,182,184,185,189,196,199,201,211,214,215,216,218,221,224,227,231,232,233,237,239,240,241,246,],[59,59,-37,59,-27,-30,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-49,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-48,59,-47,59,59,59,59,59,-38,59,59,-31,59,-34,59,-39,-40,59,-41,-32,-35,59,-36,-43,-44,-45,-42,-33,59,-46,]),'INT_NUMBER':([31,46,48,55,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,169,170,171,179,180,182,184,185,189,196,199,201,211,214,215,216,218,221,224,227,231,232,233,237,239,240,241,246,],[60,60,-37,60,128,-27,-30,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-49,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-48,60,-47,60,60,60,60,60,-38,60,60,-31,60,-34,60,-39,-40,60,-41,-32,-35,60,-36,-43,-44,-45,-42,-33,60,-46,]),'STRING':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,169,170,171,179,180,182,184,185,189,196,199,201,211,214,215,216,218,221,224,227,231,232,233,237,239,240,241,246,],[61,61,-37,61,-27,-30,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-49,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-48,61,-47,61,61,61,61,61,-38,61,61,-31,61,-34,61,-39,-40,61,-41,-32,-35,61,-36,-43,-44,-45,-42,-33,61,-46,]),'NEW':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,169,170,171,179,180,182,184,185,189,196,199,201,211,214,215,216,218,221,224,227,231,232,233,237,239,240,241,246,],[62,62,-37,62,-27,-30,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-49,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-48,62,-47,62,62,62,62,62,-38,62,62,-31,62,-34,62,-39,-40,62,-41,-32,-35,62,-36,-43,-44,-45,-42,-33,62,-46,]),'INCREMENT':([31,46,48,54,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,169,170,171,179,180,182,184,185,189,196,199,201,211,214,215,216,218,221,224,227,231,232,233,237,239,240,241,246,],[66,66,-37,117,66,-27,-30,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-49,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-48,66,-47,66,66,66,66,66,-38,66,66,-31,66,-34,66,-39,-40,66,-41,-32,-35,66,-36,-43,-44,-45,-42,-33,66,-46,]),'DECREMENT':([31,46,48,54,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,169,170,171,179,180,182,184,185,189,196,199,201,211,214,215,216,218,221,224,227,231,232,233,237,239,240,241,246,],[67,67,-37,118,67,-27,-30,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-49,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-48,67,-47,67,67,67,67,67,-38,67,67,-31,67,-34,67,-39,-40,67,-41,-32,-35,67,-36,-43,-44,-45,-42,-33,67,-46,]),'MINUS':([31,46,47,48,54,55,56,57,58,59,60,61,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,124,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,179,180,182,184,185,188,189,191,196,197,198,199,200,201,202,206,207,211,212,214,215,216,218,221,222,224,225,227,231,232,233,236,237,239,240,241,246,],[64,64,81,-37,-58,64,-52,-53,-54,-55,-56,-57,-27,-30,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-91,-99,-100,-101,64,-49,64,64,64,64,64,64,64,64,64,64,64,64,64,-90,64,-97,-98,81,-48,-89,64,-61,-62,-63,-64,-65,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-116,81,-47,64,64,81,64,64,64,-38,64,-115,64,81,-31,81,81,64,81,-34,81,-59,-60,64,81,-39,-40,64,-41,-32,81,-35,81,64,-36,-43,-44,81,-45,-42,-33,64,-46,]),'PLUS':([31,46,47,48,54,55,56,57,58,59,60,61,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,124,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,179,180,182,184,185,188,189,191,196,197,198,199,200,201,202,206,207,211,212,214,215,216,218,221,222,224,225,227,231,232,233,236,237,239,240,241,246,],[63,63,80,-37,-58,63,-52,-53,-54,-55,-56,-57,-27,-30,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-91,-99,-100,-101,63,-49,63,63,63,63,63,63,63,63,63,63,63,63,63,-90,63,-97,-98,80,-48,-89,63,-61,-62,-63,-64,-65,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-116,80,-47,63,63,80,63,63,63,-38,63,-115,63,80,-31,80,80,63,80,-34,80,-59,-60,63,80,-39,-40,63,-41,-32,80,-35,80,63,-36,-43,-44,80,-45,-42,-33,63,-46,]),'NOT':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,169,170,171,179,180,182,184,185,189,196,199,201,211,214,215,216,218,221,224,227,231,232,233,237,239,240,241,246,],[68,68,-37,68,-27,-30,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-49,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-48,68,-47,68,68,68,68,68,-38,68,68,-31,68,-34,68,-39,-40,68,-41,-32,-35,68,-36,-43,-44,-45,-42,-33,68,-46,]),'LBRACKET':([34,35,36,37,38,39,40,41,42,43,44,102,121,152,204,],[73,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,153,171,186,217,]),'LPAREN':([35,36,37,38,39,40,41,42,43,44,49,51,52,54,71,121,126,147,],[-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,97,100,101,116,125,170,175,179,]),'TIMES':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[77,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,77,-89,-61,-62,-63,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-116,77,77,-115,77,77,77,77,77,-59,-60,77,77,77,77,]),'DIVIDE':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[78,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,78,-89,-61,-62,-63,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-116,78,78,-115,78,78,78,78,78,-59,-60,78,78,78,78,]),'MODULE':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[79,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,79,-89,-61,-62,-63,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-116,79,79,-115,79,79,79,79,79,-59,-60,79,79,79,79,]),'LEQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[82,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,82,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-116,82,82,-115,82,82,82,82,82,-59,-60,82,82,82,82,]),'GEQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[83,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,83,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-116,83,83,-115,83,83,83,83,83,-59,-60,83,83,83,83,]),'LT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[84,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,84,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-116,84,84,-115,84,84,84,84,84,-59,-60,84,84,84,84,]),'GT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[85,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,85,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-116,85,85,-115,85,85,85,85,85,-59,-60,85,85,85,85,]),'NEQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[86,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,86,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-116,86,86,-115,86,86,86,86,86,-59,-60,86,86,86,86,]),'EQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[87,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,87,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-116,87,87,-115,87,87,87,87,87,-59,-60,87,87,87,87,]),'AND':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[88,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,88,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,-84,88,-86,-87,-88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-116,88,88,-115,88,88,88,88,88,-59,-60,88,88,88,88,]),'OR':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[89,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,89,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-116,89,89,-115,89,89,89,89,89,-59,-60,89,89,89,89,]),'BITWISE_AND':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[90,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,90,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,90,90,-86,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-116,90,90,-115,90,90,90,90,90,-59,-60,90,90,90,90,]),'BITWISE_OR':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[91,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,91,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,91,91,-86,-87,-88,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-116,91,91,-115,91,91,91,91,91,-59,-60,91,91,91,91,]),'BITWISE_XOR':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[92,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,92,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,92,92,-86,92,-88,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-116,92,92,-115,92,92,92,92,92,-59,-60,92,92,92,92,]),'URSHIFT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[94,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,94,-89,-61,-62,-63,-64,-65,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-116,94,94,-115,94,94,94,94,94,-59,-60,94,94,94,94,]),'LSHIFT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[95,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,95,-89,-61,-62,-63,-64,-65,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-116,95,95,-115,95,95,95,95,95,-59,-60,95,95,95,95,]),'RSHIFT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,188,191,197,198,200,202,206,207,212,222,225,236,],[96,-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,96,-89,-61,-62,-63,-64,-65,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-116,96,96,-115,96,96,96,96,96,-59,-60,96,96,96,96,]),'RPAREN':([54,56,57,58,59,60,61,93,94,95,96,115,116,117,118,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,174,188,190,193,195,197,205,206,207,220,222,],[-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,167,-97,-98,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,178,183,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,188,-116,-118,194,-115,206,-25,209,210,-117,-59,-60,-26,230,]),'COMMA':([54,56,57,58,59,60,61,93,94,95,96,115,117,118,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,154,155,156,157,158,159,160,161,162,163,164,165,167,168,188,193,206,207,236,],[-58,-52,-53,-54,-55,-56,-57,-91,-99,-100,-101,-90,-97,-98,-89,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-116,189,-115,208,-59,-60,241,]),'RBRACKET':([54,56,57,58,59,60,61,73,93,94,95,96,115,117,118,122,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,153,154,155,156,157,158,159,160,161,162,163,164,165,167,186,188,191,206,207,217,],[-58,-52,-53,-54,-55,-56,-57,127,-91,-99,-100,-101,-90,-97,-98,-89,176,177,-61,-62,-63,-64,-65,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,187,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-116,203,-115,207,-59,-60,228,]),'EQUAL':([54,71,150,152,181,203,204,228,],[103,124,182,185,199,216,219,238,]),'MINUS_EQ':([54,],[104,]),'TIMES_EQ':([54,],[105,]),'PLUS_EQ':([54,],[106,]),'DIVIDE_EQ':([54,],[107,]),'MOD_EQ':([54,],[108,]),'BITWISE_AND_EQ':([54,],[109,]),'BITWISE_OR_EQ':([54,],[110,]),'BITWISE_XOR_EQ':([54,],[111,]),'URSHIFT_EQ':([54,],[112,]),'LSHIFT_EQ':([54,],[113,]),'RSHIFT_EQ':([54,],[114,]),'ELSE':([74,99,201,],[-27,-49,213,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'class':([0,],[2,]),'visibility':([0,14,19,23,24,],[3,17,17,17,17,]),'classmodifier':([3,],[7,]),'membros':([14,19,23,24,],[18,29,32,33,]),'membro':([14,19,23,24,],[19,19,19,19,]),'atribute':([14,19,23,24,],[20,20,20,20,]),'function':([14,19,23,24,],[21,21,21,21,]),'signature':([14,19,23,24,],[22,22,22,22,]),'atributemodifier':([17,31,46,],[25,53,53,]),'body':([22,50,178,183,213,223,230,],[30,99,99,99,99,99,99,]),'type':([25,53,62,100,125,175,208,],[34,102,121,149,173,173,173,]),'primitivetypes':([25,53,62,100,125,175,208,],[35,35,35,35,35,35,35,]),'stms':([31,46,],[45,75,]),'stm':([31,46,],[46,46,]),'expression':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,170,171,179,180,182,185,189,199,211,216,227,241,],[47,47,119,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,168,172,168,191,197,198,200,202,168,212,222,225,236,236,]),'operator':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,170,171,179,180,182,185,189,199,211,216,227,241,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'call':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,170,171,179,180,182,185,189,199,211,216,227,241,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unaryoperatorprefx':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,170,171,179,180,182,185,189,199,211,216,227,241,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'brackets_expression':([34,],[72,]),'operatorbittobit':([47,119,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,154,155,156,157,158,159,160,161,162,163,164,165,168,172,191,197,198,200,202,212,222,225,236,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'bodyorstm':([50,178,183,213,223,230,],[98,196,201,224,231,240,]),'unaryoperatorsufx':([54,],[115,]),'expression_for':([100,],[148,]),'params_call':([116,170,189,],[166,190,205,]),'sigparams':([125,175,208,],[174,195,220,]),'chav_exp':([216,219,238,],[226,229,243,]),'expression_chav':([227,241,],[235,244,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class','program',1,'p_program','Sintatico.py',24),
  ('class -> visibility classmodifier CLASS ID EXTENDS ID LCHAV membros RCHAV','class',9,'p_class_extends','Sintatico.py',29),
  ('class -> visibility classmodifier CLASS ID LCHAV membros RCHAV','class',7,'p_class_default','Sintatico.py',33),
  ('class -> visibility classmodifier CLASS ID IMPLEMENTS LCHAV membros RCHAV','class',8,'p_class_implements','Sintatico.py',37),
  ('visibility -> PUBLIC','visibility',1,'p_visibility_public','Sintatico.py',43),
  ('visibility -> PRIVATE','visibility',1,'p_visibility_private','Sintatico.py',47),
  ('visibility -> PROTECTED','visibility',1,'p_visibility_protected','Sintatico.py',51),
  ('visibility -> <empty>','visibility',0,'p_visibility_default','Sintatico.py',55),
  ('classmodifier -> <empty>','classmodifier',0,'p_classmodifier_default','Sintatico.py',61),
  ('classmodifier -> ABSTRACT','classmodifier',1,'p_classmodifier_abstract','Sintatico.py',65),
  ('classmodifier -> FINAL','classmodifier',1,'p_classmodifier_final','Sintatico.py',69),
  ('classmodifier -> PACKAGE','classmodifier',1,'p_classmodifier_package','Sintatico.py',73),
  ('membros -> membro','membros',1,'p_membros','Sintatico.py',78),
  ('membros -> membro membros','membros',2,'p_multimembros','Sintatico.py',82),
  ('membro -> atribute','membro',1,'p_membro_atribute','Sintatico.py',87),
  ('membro -> function','membro',1,'p_membrofunction','Sintatico.py',91),
  ('atribute -> visibility atributemodifier type ID SEMICOLON','atribute',5,'p_atribute','Sintatico.py',98),
  ('atribute -> visibility atributemodifier type ID EQUAL expression SEMICOLON','atribute',7,'p_atribute_inicialized_type','Sintatico.py',102),
  ('atributemodifier -> <empty>','atributemodifier',0,'p_atributemodifier_default','Sintatico.py',116),
  ('atributemodifier -> STATIC','atributemodifier',1,'p_atributemodifier_static','Sintatico.py',120),
  ('atributemodifier -> FINAL','atributemodifier',1,'p_atributemodifier_final','Sintatico.py',125),
  ('function -> signature body','function',2,'p_function','Sintatico.py',131),
  ('signature -> visibility atributemodifier type ID LPAREN sigparams RPAREN','signature',7,'p_signature_simple','Sintatico.py',136),
  ('signature -> visibility atributemodifier type brackets_expression ID LPAREN sigparams RPAREN','signature',8,'p_signature_list','Sintatico.py',140),
  ('sigparams -> type ID','sigparams',2,'p_sigparams_id','Sintatico.py',145),
  ('sigparams -> type ID COMMA sigparams','sigparams',4,'p_sigparams_sigparams','Sintatico.py',149),
  ('body -> LCHAV stms RCHAV','body',3,'p_body','Sintatico.py',154),
  ('stms -> stm','stms',1,'p_stms','Sintatico.py',160),
  ('stms -> stm stms','stms',2,'p_multistms','Sintatico.py',164),
  ('stm -> expression SEMICOLON','stm',2,'p_stm_exp','Sintatico.py',170),
  ('stm -> WHILE LPAREN expression RPAREN bodyorstm','stm',5,'p_stm_while','Sintatico.py',174),
  ('stm -> DO bodyorstm WHILE LPAREN expression RPAREN SEMICOLON','stm',7,'p_stm_dowhile','Sintatico.py',178),
  ('stm -> FOR LPAREN expression_for SEMICOLON expression SEMICOLON expression RPAREN bodyorstm','stm',9,'p_stm_for','Sintatico.py',182),
  ('stm -> IF LPAREN expression RPAREN bodyorstm','stm',5,'p_stm_if','Sintatico.py',186),
  ('stm -> IF LPAREN expression RPAREN bodyorstm ELSE bodyorstm','stm',7,'p_stm_ifelse','Sintatico.py',190),
  ('stm -> IF LPAREN expression RPAREN bodyorstm ELSE IF bodyorstm','stm',8,'p_stm_elseif','Sintatico.py',194),
  ('stm -> SEMICOLON','stm',1,'p_stm_semicollon','Sintatico.py',198),
  ('stm -> atributemodifier type ID SEMICOLON','stm',4,'p_stm_variable','Sintatico.py',202),
  ('stm -> atributemodifier type ID EQUAL expression SEMICOLON','stm',6,'p_stm_variable_type','Sintatico.py',206),
  ('stm -> atributemodifier type ID LBRACKET RBRACKET SEMICOLON','stm',6,'p_stm_variable_type_list','Sintatico.py',211),
  ('stm -> atributemodifier type LBRACKET RBRACKET ID SEMICOLON','stm',6,'p_stm_variable_type_list_pre','Sintatico.py',215),
  ('stm -> atributemodifier type LBRACKET RBRACKET ID EQUAL chav_exp SEMICOLON','stm',8,'p_stm_variable_type_list_list_pre','Sintatico.py',219),
  ('stm -> atributemodifier type ID LBRACKET RBRACKET EQUAL expression SEMICOLON','stm',8,'p_stm_variable_type_list_expression','Sintatico.py',223),
  ('stm -> atributemodifier type ID LBRACKET RBRACKET EQUAL chav_exp SEMICOLON','stm',8,'p_stm_variable_type_list_expression_inicialized','Sintatico.py',227),
  ('stm -> atributemodifier type LBRACKET RBRACKET ID LBRACKET RBRACKET SEMICOLON','stm',8,'p_stm_variable_type_list_list','Sintatico.py',231),
  ('stm -> atributemodifier type LBRACKET RBRACKET ID LBRACKET RBRACKET EQUAL chav_exp SEMICOLON','stm',10,'p_stm_variable_type_list_list_inicialized','Sintatico.py',235),
  ('stm -> RETURN expression SEMICOLON','stm',3,'p_stm_return','Sintatico.py',241),
  ('stm -> RETURN SEMICOLON','stm',2,'p_stm_void_return','Sintatico.py',245),
  ('bodyorstm -> body','bodyorstm',1,'p_bodyorstm_body','Sintatico.py',251),
  ('expression_for -> type ID EQUAL expression','expression_for',4,'p_expression_assign_for_type','Sintatico.py',257),
  ('expression_for -> ID EQUAL expression','expression_for',3,'p_expression_assign_for','Sintatico.py',261),
  ('expression -> operator','expression',1,'p_expression_operator','Sintatico.py',267),
  ('expression -> call','expression',1,'p_expression_call','Sintatico.py',271),
  ('expression -> FLOAT_NUMBER','expression',1,'p_expression_FLOAT_NUMBER','Sintatico.py',275),
  ('expression -> DOUBLE_NUMBER','expression',1,'p_expression_DOUBLE_NUMBER','Sintatico.py',279),
  ('expression -> INT_NUMBER','expression',1,'p_expression_INT_NUMBER','Sintatico.py',283),
  ('expression -> STRING','expression',1,'p_expression_STRING','Sintatico.py',287),
  ('expression -> ID','expression',1,'p_expression_ID','Sintatico.py',291),
  ('expression -> NEW type LPAREN params_call RPAREN','expression',5,'p_expression_new','Sintatico.py',295),
  ('expression -> NEW type LBRACKET expression RBRACKET','expression',5,'p_expression_new_list','Sintatico.py',299),
  ('operator -> expression TIMES expression','operator',3,'p_operator_arithmetic_times','Sintatico.py',306),
  ('operator -> expression DIVIDE expression','operator',3,'p_operator_arithmetic_divide','Sintatico.py',310),
  ('operator -> expression MODULE expression','operator',3,'p_operator_arithmetic_module','Sintatico.py',314),
  ('operator -> expression PLUS expression','operator',3,'p_operator_arithmetic_plus','Sintatico.py',318),
  ('operator -> expression MINUS expression','operator',3,'p_operator_arithmetic_minus','Sintatico.py',322),
  ('operator -> ID EQUAL expression','operator',3,'p_operator_assign_EQUAL','Sintatico.py',326),
  ('operator -> ID MINUS_EQ expression','operator',3,'p_operator_assign_MINUS_EQ','Sintatico.py',330),
  ('operator -> ID TIMES_EQ expression','operator',3,'p_operator_assign_TIMES_EQ','Sintatico.py',334),
  ('operator -> ID PLUS_EQ expression','operator',3,'p_operator_assign_PLUS_EQ','Sintatico.py',338),
  ('operator -> ID DIVIDE_EQ expression','operator',3,'p_operator_assign_DIVIDE_EQ','Sintatico.py',342),
  ('operator -> ID MOD_EQ expression','operator',3,'p_operator_assign_MOD_EQ','Sintatico.py',346),
  ('operator -> ID BITWISE_AND_EQ expression','operator',3,'p_operator_assign_BITWISE_AND_EQ','Sintatico.py',350),
  ('operator -> ID BITWISE_OR_EQ expression','operator',3,'p_operator_assign_BITWISE_OR_EQ','Sintatico.py',354),
  ('operator -> ID BITWISE_XOR_EQ expression','operator',3,'p_operator_assign_BITWISE_XOR_EQ','Sintatico.py',358),
  ('operator -> ID URSHIFT_EQ expression','operator',3,'p_operator_assign_URSHIFT_EQ','Sintatico.py',362),
  ('operator -> ID LSHIFT_EQ expression','operator',3,'p_operator_assign_LSHIFT_EQ','Sintatico.py',366),
  ('operator -> ID RSHIFT_EQ expression','operator',3,'p_operator_assign_RSHIFT_EQ','Sintatico.py',370),
  ('operator -> expression LEQ expression','operator',3,'p_operator_comparator_LEQ','Sintatico.py',374),
  ('operator -> expression GEQ expression','operator',3,'p_operator_comparator_GEQ','Sintatico.py',378),
  ('operator -> expression LT expression','operator',3,'p_operator_comparator_LT','Sintatico.py',382),
  ('operator -> expression GT expression','operator',3,'p_operator_comparator_GT','Sintatico.py',386),
  ('operator -> expression NEQ expression','operator',3,'p_operator_comparator_NEQ','Sintatico.py',390),
  ('operator -> expression EQ expression','operator',3,'p_operator_comparator_EQ','Sintatico.py',394),
  ('operator -> expression AND expression','operator',3,'p_operator_comparator_AND','Sintatico.py',398),
  ('operator -> expression OR expression','operator',3,'p_operator_comparator_OR','Sintatico.py',402),
  ('operator -> expression BITWISE_AND expression','operator',3,'p_operator_comparator_BITWISE_AND','Sintatico.py',406),
  ('operator -> expression BITWISE_OR expression','operator',3,'p_operator_comparator_BITWISE_OR','Sintatico.py',410),
  ('operator -> expression BITWISE_XOR expression','operator',3,'p_operator_comparator_BITWISE_XOR','Sintatico.py',414),
  ('operator -> unaryoperatorprefx ID','operator',2,'p_operator_unaryoperatorprefx','Sintatico.py',418),
  ('operator -> ID unaryoperatorsufx','operator',2,'p_operator_unaryoperatorsufx','Sintatico.py',422),
  ('operator -> expression operatorbittobit','operator',2,'p_operator_operatorbittobit','Sintatico.py',426),
  ('unaryoperatorprefx -> INCREMENT','unaryoperatorprefx',1,'p_unaryoperatorprefx','Sintatico.py',433),
  ('unaryoperatorprefx -> DECREMENT','unaryoperatorprefx',1,'p_unaryoperatorprefx','Sintatico.py',434),
  ('unaryoperatorprefx -> MINUS','unaryoperatorprefx',1,'p_unaryoperatorprefx','Sintatico.py',435),
  ('unaryoperatorprefx -> PLUS','unaryoperatorprefx',1,'p_unaryoperatorprefx','Sintatico.py',436),
  ('unaryoperatorprefx -> NOT','unaryoperatorprefx',1,'p_unaryoperatorprefx','Sintatico.py',437),
  ('unaryoperatorsufx -> INCREMENT','unaryoperatorsufx',1,'p_unaryoperatorsufx','Sintatico.py',444),
  ('unaryoperatorsufx -> DECREMENT','unaryoperatorsufx',1,'p_unaryoperatorsufx','Sintatico.py',445),
  ('operatorbittobit -> URSHIFT','operatorbittobit',1,'p_operatorbittobit','Sintatico.py',454),
  ('operatorbittobit -> LSHIFT','operatorbittobit',1,'p_operatorbittobit','Sintatico.py',455),
  ('operatorbittobit -> RSHIFT','operatorbittobit',1,'p_operatorbittobit','Sintatico.py',456),
  ('brackets_expression -> LBRACKET RBRACKET','brackets_expression',2,'p_brackets_expression_default','Sintatico.py',464),
  ('brackets_expression -> LBRACKET INT_NUMBER RBRACKET','brackets_expression',3,'p_brackets_expression_int','Sintatico.py',468),
  ('brackets_expression -> LBRACKET ID RBRACKET','brackets_expression',3,'p_brackets_expression_id','Sintatico.py',473),
  ('type -> primitivetypes','type',1,'p_type','Sintatico.py',480),
  ('primitivetypes -> TYPE_INT','primitivetypes',1,'p_primitivetypes','Sintatico.py',486),
  ('primitivetypes -> TYPE_FLOAT','primitivetypes',1,'p_primitivetypes','Sintatico.py',487),
  ('primitivetypes -> TYPE_DOUBLE','primitivetypes',1,'p_primitivetypes','Sintatico.py',488),
  ('primitivetypes -> TYPE_BYTE','primitivetypes',1,'p_primitivetypes','Sintatico.py',489),
  ('primitivetypes -> TYPE_BOOLEAN','primitivetypes',1,'p_primitivetypes','Sintatico.py',490),
  ('primitivetypes -> TYPE_CHAR','primitivetypes',1,'p_primitivetypes','Sintatico.py',491),
  ('primitivetypes -> TYPE_STRING','primitivetypes',1,'p_primitivetypes','Sintatico.py',492),
  ('primitivetypes -> TYPE_LONG','primitivetypes',1,'p_primitivetypes','Sintatico.py',493),
  ('primitivetypes -> TYPE_VOID','primitivetypes',1,'p_primitivetypes','Sintatico.py',494),
  ('call -> ID LPAREN params_call RPAREN','call',4,'p_call','Sintatico.py',503),
  ('call -> ID LPAREN RPAREN','call',3,'p_call_default','Sintatico.py',507),
  ('params_call -> expression COMMA params_call','params_call',3,'p_params_multi','Sintatico.py',512),
  ('params_call -> expression','params_call',1,'p_params_unique','Sintatico.py',516),
  ('chav_exp -> LCHAV RCHAV','chav_exp',2,'p_chav_exp','Sintatico.py',521),
  ('chav_exp -> LCHAV expression_chav','chav_exp',2,'p_chav_exp_expchav','Sintatico.py',525),
  ('expression_chav -> expression COMMA expression_chav','expression_chav',3,'p_expression_chav_mult','Sintatico.py',532),
  ('expression_chav -> expression RCHAV','expression_chav',2,'p_expression_chav_expression_uni','Sintatico.py',536),
  ('expression_chav -> expression COMMA RCHAV','expression_chav',3,'p_expression_chav_expression_comma','Sintatico.py',540),
]
