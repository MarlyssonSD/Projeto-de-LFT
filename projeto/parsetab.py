
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALMINUS_EQTIMES_EQPLUS_EQDIVIDE_EQMOD_EQBITWISE_AND_EQBITWISE_OR_EQBITWISE_XOR_EQURSHIFT_EQLSHIFT_EQRSHIFT_EQleftORleftANDleftBITWISE_ORleftBITWISE_XORleftBITWISE_ANDleftEQNEQleftLTGTLEQGEQleftLSHIFTRSHIFTURSHIFTleftPLUSMINUSleftTIMESDIVIDEMODULEleftLINCREMENTLDECREMENTUPLUSUMINUSNOTleftRINCREMENTRDECREMENTABSTRACT AND ASSERT BIN_NUMBER BITWISE_AND BITWISE_AND_EQ BITWISE_NOT BITWISE_OR BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_EQ BREAK BYTE_NUMBER CASE CATCH CHAR CLASS COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQ DO DOT DOUBLE_NUMBER ELSE ENUM EQ EQUAL EXTENDS FINAL FINALLY FLOAT_NUMBER FOR GEQ GOTO GT HEXA_NUMBER ID IF IMPLEMENTS IMPORT INCREMENT INSTANCEOF INTERFACE INT_NUMBER LBRACKET LCHAV LEQ LONG_NUMBER LPAREN LSHIFT LSHIFT_EQ LT MINUS MINUS_EQ MODULE MOD_EQ NATIVE NEQ NEW NOT OCTAL_NUMBER OR PACKAGE PLUS PLUS_EQ POT PRIVATE PROTECTED PUBLIC RBRACKET RCHAV RETURN RPAREN RSHIFT RSHIFT_EQ SEMICOLON SHORT STATIC STRICTFP STRING SUPER SWITCH SYNCHRONIZED TERNARY THIS THROW THROWS TIMES TIMES_EQ TRANSIENT TRY TYPE_BOOLEAN TYPE_BYTE TYPE_CHAR TYPE_DOUBLE TYPE_FLOAT TYPE_INT TYPE_LONG TYPE_STRING TYPE_VOID URSHIFT URSHIFT_EQ VOLATILE WHILE program : class class : visibility classmodifier CLASS ID EXTENDS ID LCHAV membros RCHAVclass : visibility classmodifier CLASS ID LCHAV membros RCHAV class : visibility classmodifier CLASS ID IMPLEMENTS LCHAV membros RCHAV visibility : PUBLIC visibility : PRIVATE visibility : PROTECTED visibility : classmodifier : classmodifier : ABSTRACTclassmodifier : FINALclassmodifier : PACKAGEmembros : membromembros : membro membrosmembro : atributemembro : functionatribute : visibility atributemodifier type ID SEMICOLONatribute : visibility atributemodifier type ID EQUAL expression SEMICOLONatributemodifier : atributemodifier : STATICatributemodifier : FINALfunction : signature body signature : visibility atributemodifier type ID LPAREN sigparams RPAREN  signature : visibility atributemodifier type brackets_expression ID LPAREN sigparams RPAREN sigparams : type ID  sigparams : type ID COMMA sigparamsbody : LCHAV stms RCHAVstms : stm stms : stm stms stm : expression SEMICOLONstm : WHILE LPAREN expression RPAREN bodyorstmstm : DO bodyorstm WHILE LPAREN expression RPAREN SEMICOLON stm : FOR LPAREN expression_for SEMICOLON expression SEMICOLON expression RPAREN bodyorstmstm : IF LPAREN expression RPAREN bodyorstmstm : IF LPAREN expression RPAREN bodyorstm ELSE bodyorstmstm : IF LPAREN expression RPAREN bodyorstm ELSE IF bodyorstmstm : SEMICOLON stm : atributemodifier type ID SEMICOLONstm : atributemodifier type ID EQUAL expression SEMICOLONstm : RETURN expression SEMICOLONstm : RETURN SEMICOLONbodyorstm : body expression_for : type ID EQUAL expression   expression_for : ID EQUAL expression   expression : operator  expression : call  expression : FLOAT_NUMBER  expression : DOUBLE_NUMBER  expression : INT_NUMBER  expression : STRING  expression : ID  expression : NEW type LPAREN params_call RPAREN expression : NEW type LBRACKET expression RBRACKET operator : expression TIMES expressionoperator : expression DIVIDE expressionoperator : expression MODULE expressionoperator : expression PLUS expressionoperator : expression MINUS expressionoperator : ID EQUAL expressionoperator : ID MINUS_EQ expressionoperator : ID TIMES_EQ expressionoperator : ID PLUS_EQ expressionoperator : ID DIVIDE_EQ expressionoperator : ID MOD_EQ expressionoperator : ID BITWISE_AND_EQ expressionoperator : ID BITWISE_OR_EQ expressionoperator : ID BITWISE_XOR_EQ expressionoperator : ID URSHIFT_EQ expressionoperator : ID LSHIFT_EQ expressionoperator : ID RSHIFT_EQ expressionoperator : expression LEQ expressionoperator : expression GEQ expressionoperator : expression LT expressionoperator : expression GT expressionoperator : expression NEQ expressionoperator : expression EQ expressionoperator : expression AND expressionoperator : expression OR expressionoperator : expression BITWISE_AND expressionoperator : expression BITWISE_OR expressionoperator : expression BITWISE_XOR expressionoperator : unaryoperatorprefx IDoperator : ID unaryoperatorsufxoperator : expression operatorbittobit\n    unaryoperatorprefx : INCREMENT %prec LINCREMENT\n                        | DECREMENT %prec LDECREMENT\n                        | MINUS %prec UMINUS\n                        | PLUS %prec UPLUS\n                        | NOT\n    \n    unaryoperatorsufx : INCREMENT %prec RINCREMENT\n                        | DECREMENT %prec RDECREMENT\n    \n    operatorbittobit : URSHIFT\n                        | LSHIFT\n                        | RSHIFT\n    \n     brackets_expression : LBRACKET RBRACKET\n                            | LBRACKET INT_NUMBER RBRACKET\n                            | LBRACKET ID RBRACKET\n     type : primitivetypesprimitivetypes : TYPE_INT\n                        | TYPE_FLOAT\n                        | TYPE_DOUBLE\n                        | TYPE_BYTE\n                        | TYPE_BOOLEAN\n                        | TYPE_CHAR\n                        | TYPE_STRING\n                        | TYPE_LONG\n                        | TYPE_VOID\n\n     call : ID LPAREN params_call RPAREN call : ID LPAREN RPAREN params_call : expression COMMA params_call params_call : expression'
    
_lr_action_items = {'PUBLIC':([0,14,19,20,21,23,24,30,74,123,189,],[4,4,4,-15,-16,4,4,-22,-27,-17,-18,]),'PRIVATE':([0,14,19,20,21,23,24,30,74,123,189,],[5,5,5,-15,-16,5,5,-22,-27,-17,-18,]),'PROTECTED':([0,14,19,20,21,23,24,30,74,123,189,],[6,6,6,-15,-16,6,6,-22,-27,-17,-18,]),'ABSTRACT':([0,3,4,5,6,],[-8,8,-5,-6,-7,]),'FINAL':([0,3,4,5,6,14,17,19,20,21,23,24,30,31,46,48,74,76,99,120,123,168,183,189,193,198,209,211,214,216,217,],[-8,9,-5,-6,-7,-8,27,-8,-15,-16,-8,-8,-22,27,27,-37,-27,-30,-42,-41,-17,-40,-38,-18,-31,-34,-39,-32,-35,-36,-33,]),'PACKAGE':([0,3,4,5,6,],[-8,10,-5,-6,-7,]),'CLASS':([0,3,4,5,6,7,8,9,10,],[-8,-9,-5,-6,-7,11,-10,-11,-12,]),'$end':([1,2,28,69,70,],[0,-1,-3,-4,-2,]),'STATIC':([4,5,6,14,17,19,20,21,23,24,30,31,46,48,74,76,99,120,123,168,183,189,193,198,209,211,214,216,217,],[-5,-6,-7,-8,26,-8,-15,-16,-8,-8,-22,26,26,-37,-27,-30,-42,-41,-17,-40,-38,-18,-31,-34,-39,-32,-35,-36,-33,]),'TYPE_INT':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,168,174,183,189,193,198,203,209,211,214,216,217,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,36,-20,-21,-22,-19,-19,-37,36,36,-27,-30,-42,36,-41,-17,36,-40,36,-38,-18,-31,-34,36,-39,-32,-35,-36,-33,]),'TYPE_FLOAT':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,168,174,183,189,193,198,203,209,211,214,216,217,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,37,-20,-21,-22,-19,-19,-37,37,37,-27,-30,-42,37,-41,-17,37,-40,37,-38,-18,-31,-34,37,-39,-32,-35,-36,-33,]),'TYPE_DOUBLE':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,168,174,183,189,193,198,203,209,211,214,216,217,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,38,-20,-21,-22,-19,-19,-37,38,38,-27,-30,-42,38,-41,-17,38,-40,38,-38,-18,-31,-34,38,-39,-32,-35,-36,-33,]),'TYPE_BYTE':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,168,174,183,189,193,198,203,209,211,214,216,217,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,39,-20,-21,-22,-19,-19,-37,39,39,-27,-30,-42,39,-41,-17,39,-40,39,-38,-18,-31,-34,39,-39,-32,-35,-36,-33,]),'TYPE_BOOLEAN':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,168,174,183,189,193,198,203,209,211,214,216,217,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,40,-20,-21,-22,-19,-19,-37,40,40,-27,-30,-42,40,-41,-17,40,-40,40,-38,-18,-31,-34,40,-39,-32,-35,-36,-33,]),'TYPE_CHAR':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,168,174,183,189,193,198,203,209,211,214,216,217,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,41,-20,-21,-22,-19,-19,-37,41,41,-27,-30,-42,41,-41,-17,41,-40,41,-38,-18,-31,-34,41,-39,-32,-35,-36,-33,]),'TYPE_STRING':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,168,174,183,189,193,198,203,209,211,214,216,217,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,42,-20,-21,-22,-19,-19,-37,42,42,-27,-30,-42,42,-41,-17,42,-40,42,-38,-18,-31,-34,42,-39,-32,-35,-36,-33,]),'TYPE_LONG':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,168,174,183,189,193,198,203,209,211,214,216,217,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,43,-20,-21,-22,-19,-19,-37,43,43,-27,-30,-42,43,-41,-17,43,-40,43,-38,-18,-31,-34,43,-39,-32,-35,-36,-33,]),'TYPE_VOID':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,100,120,123,125,168,174,183,189,193,198,203,209,211,214,216,217,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,44,-20,-21,-22,-19,-19,-37,44,44,-27,-30,-42,44,-41,-17,44,-40,44,-38,-18,-31,-34,44,-39,-32,-35,-36,-33,]),'ID':([11,13,31,34,35,36,37,38,39,40,41,42,43,44,46,48,55,63,64,65,66,67,68,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,127,149,168,169,170,172,175,176,178,179,181,183,184,186,193,196,198,206,209,211,214,216,217,],[12,16,54,71,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,54,-37,54,-88,-87,122,-85,-86,-89,126,129,-27,-30,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-42,150,54,152,54,54,54,54,54,54,54,54,54,54,54,54,54,-41,54,-95,180,-40,54,54,190,-96,-97,54,54,54,-38,54,54,-31,54,-34,54,-39,-32,-35,-36,-33,]),'EXTENDS':([12,],[13,]),'LCHAV':([12,15,16,22,50,177,182,191,204,208,213,215,],[14,23,24,31,31,31,31,-23,-24,31,31,31,]),'IMPLEMENTS':([12,],[15,]),'RCHAV':([18,19,20,21,29,30,32,33,45,46,48,74,75,76,99,120,123,168,183,189,193,198,209,211,214,216,217,],[28,-13,-15,-16,-14,-22,69,70,74,-28,-37,-27,-29,-30,-42,-41,-17,-40,-38,-18,-31,-34,-39,-32,-35,-36,-33,]),'WHILE':([31,46,48,74,76,98,99,120,168,183,193,198,209,211,214,216,217,],[49,49,-37,-27,-30,147,-42,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'DO':([31,46,48,74,76,99,120,168,183,193,198,209,211,214,216,217,],[50,50,-37,-27,-30,-42,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'FOR':([31,46,48,74,76,99,120,168,183,193,198,209,211,214,216,217,],[51,51,-37,-27,-30,-42,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'IF':([31,46,48,74,76,99,120,168,183,193,198,208,209,211,214,216,217,],[52,52,-37,-27,-30,-42,-41,-40,-38,-31,-34,213,-39,-32,-35,-36,-33,]),'SEMICOLON':([31,46,47,48,54,55,56,57,58,59,60,61,71,74,76,93,94,95,96,99,115,117,118,119,120,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,168,171,183,185,193,195,197,198,199,201,202,205,207,209,211,214,216,217,],[48,48,76,-37,-51,120,-45,-46,-47,-48,-49,-50,123,-27,-30,-84,-92,-93,-94,-42,-83,-90,-91,168,-41,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,179,183,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-109,-40,189,-38,-108,-31,206,-44,-34,209,-52,-53,211,-43,-39,-32,-35,-36,-33,]),'RETURN':([31,46,48,74,76,99,120,168,183,193,198,209,211,214,216,217,],[55,55,-37,-27,-30,-42,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'FLOAT_NUMBER':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,168,169,170,178,179,181,183,184,186,193,196,198,206,209,211,214,216,217,],[58,58,-37,58,-27,-30,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-42,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-41,58,-40,58,58,58,58,58,-38,58,58,-31,58,-34,58,-39,-32,-35,-36,-33,]),'DOUBLE_NUMBER':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,168,169,170,178,179,181,183,184,186,193,196,198,206,209,211,214,216,217,],[59,59,-37,59,-27,-30,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-42,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-41,59,-40,59,59,59,59,59,-38,59,59,-31,59,-34,59,-39,-32,-35,-36,-33,]),'INT_NUMBER':([31,46,48,55,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,168,169,170,178,179,181,183,184,186,193,196,198,206,209,211,214,216,217,],[60,60,-37,60,128,-27,-30,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-42,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-41,60,-40,60,60,60,60,60,-38,60,60,-31,60,-34,60,-39,-32,-35,-36,-33,]),'STRING':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,168,169,170,178,179,181,183,184,186,193,196,198,206,209,211,214,216,217,],[61,61,-37,61,-27,-30,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-42,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-41,61,-40,61,61,61,61,61,-38,61,61,-31,61,-34,61,-39,-32,-35,-36,-33,]),'NEW':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,168,169,170,178,179,181,183,184,186,193,196,198,206,209,211,214,216,217,],[62,62,-37,62,-27,-30,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-42,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-41,62,-40,62,62,62,62,62,-38,62,62,-31,62,-34,62,-39,-32,-35,-36,-33,]),'INCREMENT':([31,46,48,54,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,168,169,170,178,179,181,183,184,186,193,196,198,206,209,211,214,216,217,],[66,66,-37,117,66,-27,-30,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-42,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-41,66,-40,66,66,66,66,66,-38,66,66,-31,66,-34,66,-39,-32,-35,-36,-33,]),'DECREMENT':([31,46,48,54,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,168,169,170,178,179,181,183,184,186,193,196,198,206,209,211,214,216,217,],[67,67,-37,118,67,-27,-30,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-42,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-41,67,-40,67,67,67,67,67,-38,67,67,-31,67,-34,67,-39,-32,-35,-36,-33,]),'MINUS':([31,46,47,48,54,55,56,57,58,59,60,61,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,124,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,178,179,181,183,184,185,186,188,193,194,195,196,197,198,199,201,202,206,207,209,211,212,214,216,217,],[64,64,81,-37,-51,64,-45,-46,-47,-48,-49,-50,-27,-30,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-84,-92,-93,-94,64,-42,64,64,64,64,64,64,64,64,64,64,64,64,64,-83,64,-90,-91,81,-41,-82,64,-54,-55,-56,-57,-58,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-109,81,-40,64,64,81,64,64,64,-38,64,-108,64,81,-31,81,81,64,81,-34,81,-52,-53,64,81,-39,-32,81,-35,-36,-33,]),'PLUS':([31,46,47,48,54,55,56,57,58,59,60,61,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,124,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,178,179,181,183,184,185,186,188,193,194,195,196,197,198,199,201,202,206,207,209,211,212,214,216,217,],[63,63,80,-37,-51,63,-45,-46,-47,-48,-49,-50,-27,-30,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-84,-92,-93,-94,63,-42,63,63,63,63,63,63,63,63,63,63,63,63,63,-83,63,-90,-91,80,-41,-82,63,-54,-55,-56,-57,-58,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-109,80,-40,63,63,80,63,63,63,-38,63,-108,63,80,-31,80,80,63,80,-34,80,-52,-53,63,80,-39,-32,80,-35,-36,-33,]),'NOT':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,168,169,170,178,179,181,183,184,186,193,196,198,206,209,211,214,216,217,],[68,68,-37,68,-27,-30,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-42,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-41,68,-40,68,68,68,68,68,-38,68,68,-31,68,-34,68,-39,-32,-35,-36,-33,]),'LBRACKET':([34,35,36,37,38,39,40,41,42,43,44,121,],[73,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,170,]),'LPAREN':([35,36,37,38,39,40,41,42,43,44,49,51,52,54,71,121,126,147,],[-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,97,100,101,116,125,169,174,178,]),'TIMES':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[77,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,77,-82,-54,-55,-56,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-109,77,77,-108,77,77,77,77,77,-52,-53,77,77,]),'DIVIDE':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[78,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,78,-82,-54,-55,-56,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-109,78,78,-108,78,78,78,78,78,-52,-53,78,78,]),'MODULE':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[79,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,79,-82,-54,-55,-56,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-109,79,79,-108,79,79,79,79,79,-52,-53,79,79,]),'LEQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[82,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,82,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-109,82,82,-108,82,82,82,82,82,-52,-53,82,82,]),'GEQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[83,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,83,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-109,83,83,-108,83,83,83,83,83,-52,-53,83,83,]),'LT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[84,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,84,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-109,84,84,-108,84,84,84,84,84,-52,-53,84,84,]),'GT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[85,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,85,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-109,85,85,-108,85,85,85,85,85,-52,-53,85,85,]),'NEQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[86,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,86,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,-75,-76,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-109,86,86,-108,86,86,86,86,86,-52,-53,86,86,]),'EQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[87,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,87,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,-75,-76,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-109,87,87,-108,87,87,87,87,87,-52,-53,87,87,]),'AND':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[88,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,88,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,-75,-76,-77,88,-79,-80,-81,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-109,88,88,-108,88,88,88,88,88,-52,-53,88,88,]),'OR':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[89,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,89,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-109,89,89,-108,89,89,89,89,89,-52,-53,89,89,]),'BITWISE_AND':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[90,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,90,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,-75,-76,90,90,-79,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-109,90,90,-108,90,90,90,90,90,-52,-53,90,90,]),'BITWISE_OR':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[91,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,91,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,-75,-76,91,91,-79,-80,-81,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-109,91,91,-108,91,91,91,91,91,-52,-53,91,91,]),'BITWISE_XOR':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[92,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,92,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,-75,-76,92,92,-79,92,-81,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-109,92,92,-108,92,92,92,92,92,-52,-53,92,92,]),'URSHIFT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[94,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,94,-82,-54,-55,-56,-57,-58,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-109,94,94,-108,94,94,94,94,94,-52,-53,94,94,]),'LSHIFT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[95,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,95,-82,-54,-55,-56,-57,-58,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-109,95,95,-108,95,95,95,95,95,-52,-53,95,95,]),'RSHIFT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,166,167,171,185,188,194,195,197,199,201,202,207,212,],[96,-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,96,-82,-54,-55,-56,-57,-58,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-109,96,96,-108,96,96,96,96,96,-52,-53,96,96,]),'RPAREN':([54,56,57,58,59,60,61,93,94,95,96,115,116,117,118,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,173,185,187,190,192,194,200,201,202,210,212,],[-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,166,-90,-91,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,177,182,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,185,-109,-111,191,-108,201,-25,204,205,-110,-52,-53,-26,215,]),'COMMA':([54,56,57,58,59,60,61,93,94,95,96,115,117,118,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,153,154,155,156,157,158,159,160,161,162,163,164,166,167,185,190,201,202,],[-51,-45,-46,-47,-48,-49,-50,-84,-92,-93,-94,-83,-90,-91,-82,-54,-55,-56,-57,-58,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-109,186,-108,203,-52,-53,]),'RBRACKET':([54,56,57,58,59,60,61,73,93,94,95,96,115,117,118,122,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,153,154,155,156,157,158,159,160,161,162,163,164,166,185,188,201,202,],[-51,-45,-46,-47,-48,-49,-50,127,-84,-92,-93,-94,-83,-90,-91,-82,175,176,-54,-55,-56,-57,-58,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-109,-108,202,-52,-53,]),'EQUAL':([54,71,150,152,180,],[103,124,181,184,196,]),'MINUS_EQ':([54,],[104,]),'TIMES_EQ':([54,],[105,]),'PLUS_EQ':([54,],[106,]),'DIVIDE_EQ':([54,],[107,]),'MOD_EQ':([54,],[108,]),'BITWISE_AND_EQ':([54,],[109,]),'BITWISE_OR_EQ':([54,],[110,]),'BITWISE_XOR_EQ':([54,],[111,]),'URSHIFT_EQ':([54,],[112,]),'LSHIFT_EQ':([54,],[113,]),'RSHIFT_EQ':([54,],[114,]),'ELSE':([74,99,198,],[-27,-42,208,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'class':([0,],[2,]),'visibility':([0,14,19,23,24,],[3,17,17,17,17,]),'classmodifier':([3,],[7,]),'membros':([14,19,23,24,],[18,29,32,33,]),'membro':([14,19,23,24,],[19,19,19,19,]),'atribute':([14,19,23,24,],[20,20,20,20,]),'function':([14,19,23,24,],[21,21,21,21,]),'signature':([14,19,23,24,],[22,22,22,22,]),'atributemodifier':([17,31,46,],[25,53,53,]),'body':([22,50,177,182,208,213,215,],[30,99,99,99,99,99,99,]),'type':([25,53,62,100,125,174,203,],[34,102,121,149,172,172,172,]),'primitivetypes':([25,53,62,100,125,174,203,],[35,35,35,35,35,35,35,]),'stms':([31,46,],[45,75,]),'stm':([31,46,],[46,46,]),'expression':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,169,170,178,179,181,184,186,196,206,],[47,47,119,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,167,171,167,188,194,195,197,199,167,207,212,]),'operator':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,169,170,178,179,181,184,186,196,206,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'call':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,169,170,178,179,181,184,186,196,206,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unaryoperatorprefx':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,169,170,178,179,181,184,186,196,206,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'brackets_expression':([34,],[72,]),'operatorbittobit':([47,119,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,153,154,155,156,157,158,159,160,161,162,163,164,167,171,188,194,195,197,199,207,212,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'bodyorstm':([50,177,182,208,213,215,],[98,193,198,214,216,217,]),'unaryoperatorsufx':([54,],[115,]),'expression_for':([100,],[148,]),'params_call':([116,169,186,],[165,187,200,]),'sigparams':([125,174,203,],[173,192,210,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class','program',1,'p_program','ExpressionLanguageSin.py',23),
  ('class -> visibility classmodifier CLASS ID EXTENDS ID LCHAV membros RCHAV','class',9,'p_class_extends','ExpressionLanguageSin.py',28),
  ('class -> visibility classmodifier CLASS ID LCHAV membros RCHAV','class',7,'p_class_default','ExpressionLanguageSin.py',32),
  ('class -> visibility classmodifier CLASS ID IMPLEMENTS LCHAV membros RCHAV','class',8,'p_class_implements','ExpressionLanguageSin.py',36),
  ('visibility -> PUBLIC','visibility',1,'p_visibility_public','ExpressionLanguageSin.py',41),
  ('visibility -> PRIVATE','visibility',1,'p_visibility_private','ExpressionLanguageSin.py',45),
  ('visibility -> PROTECTED','visibility',1,'p_visibility_protected','ExpressionLanguageSin.py',49),
  ('visibility -> <empty>','visibility',0,'p_visibility_default','ExpressionLanguageSin.py',53),
  ('classmodifier -> <empty>','classmodifier',0,'p_classmodifier_default','ExpressionLanguageSin.py',58),
  ('classmodifier -> ABSTRACT','classmodifier',1,'p_classmodifier_abstract','ExpressionLanguageSin.py',62),
  ('classmodifier -> FINAL','classmodifier',1,'p_classmodifier_final','ExpressionLanguageSin.py',66),
  ('classmodifier -> PACKAGE','classmodifier',1,'p_classmodifier_package','ExpressionLanguageSin.py',70),
  ('membros -> membro','membros',1,'p_membros','ExpressionLanguageSin.py',75),
  ('membros -> membro membros','membros',2,'p_multimembros','ExpressionLanguageSin.py',79),
  ('membro -> atribute','membro',1,'p_membro_atribute','ExpressionLanguageSin.py',83),
  ('membro -> function','membro',1,'p_membrofunction','ExpressionLanguageSin.py',91),
  ('atribute -> visibility atributemodifier type ID SEMICOLON','atribute',5,'p_atribute','ExpressionLanguageSin.py',96),
  ('atribute -> visibility atributemodifier type ID EQUAL expression SEMICOLON','atribute',7,'p_atribute_inicialized_type','ExpressionLanguageSin.py',100),
  ('atributemodifier -> <empty>','atributemodifier',0,'p_atributemodifier_default','ExpressionLanguageSin.py',114),
  ('atributemodifier -> STATIC','atributemodifier',1,'p_atributemodifier_static','ExpressionLanguageSin.py',118),
  ('atributemodifier -> FINAL','atributemodifier',1,'p_atributemodifier_final','ExpressionLanguageSin.py',122),
  ('function -> signature body','function',2,'p_function','ExpressionLanguageSin.py',127),
  ('signature -> visibility atributemodifier type ID LPAREN sigparams RPAREN','signature',7,'p_signature','ExpressionLanguageSin.py',131),
  ('signature -> visibility atributemodifier type brackets_expression ID LPAREN sigparams RPAREN','signature',8,'p_signature_list','ExpressionLanguageSin.py',135),
  ('sigparams -> type ID','sigparams',2,'p_sigparams_id','ExpressionLanguageSin.py',139),
  ('sigparams -> type ID COMMA sigparams','sigparams',4,'p_sigparams_sigparams','ExpressionLanguageSin.py',143),
  ('body -> LCHAV stms RCHAV','body',3,'p_body','ExpressionLanguageSin.py',148),
  ('stms -> stm','stms',1,'p_stms','ExpressionLanguageSin.py',152),
  ('stms -> stm stms','stms',2,'p_multistms','ExpressionLanguageSin.py',156),
  ('stm -> expression SEMICOLON','stm',2,'p_stm_exp','ExpressionLanguageSin.py',160),
  ('stm -> WHILE LPAREN expression RPAREN bodyorstm','stm',5,'p_stm_while','ExpressionLanguageSin.py',164),
  ('stm -> DO bodyorstm WHILE LPAREN expression RPAREN SEMICOLON','stm',7,'p_stm_dowhile','ExpressionLanguageSin.py',168),
  ('stm -> FOR LPAREN expression_for SEMICOLON expression SEMICOLON expression RPAREN bodyorstm','stm',9,'p_stm_for','ExpressionLanguageSin.py',172),
  ('stm -> IF LPAREN expression RPAREN bodyorstm','stm',5,'p_stm_if','ExpressionLanguageSin.py',176),
  ('stm -> IF LPAREN expression RPAREN bodyorstm ELSE bodyorstm','stm',7,'p_stm_ifelse','ExpressionLanguageSin.py',180),
  ('stm -> IF LPAREN expression RPAREN bodyorstm ELSE IF bodyorstm','stm',8,'p_stm_elseif','ExpressionLanguageSin.py',184),
  ('stm -> SEMICOLON','stm',1,'p_stm_semicollon','ExpressionLanguageSin.py',188),
  ('stm -> atributemodifier type ID SEMICOLON','stm',4,'p_stm_variable','ExpressionLanguageSin.py',196),
  ('stm -> atributemodifier type ID EQUAL expression SEMICOLON','stm',6,'p_stm_variable_type','ExpressionLanguageSin.py',201),
  ('stm -> RETURN expression SEMICOLON','stm',3,'p_stm_return','ExpressionLanguageSin.py',205),
  ('stm -> RETURN SEMICOLON','stm',2,'p_stm_void_return','ExpressionLanguageSin.py',209),
  ('bodyorstm -> body','bodyorstm',1,'p_bodyorstm_body','ExpressionLanguageSin.py',213),
  ('expression_for -> type ID EQUAL expression','expression_for',4,'p_expression_assign_for_type','ExpressionLanguageSin.py',223),
  ('expression_for -> ID EQUAL expression','expression_for',3,'p_expression_assign_for','ExpressionLanguageSin.py',227),
  ('expression -> operator','expression',1,'p_expression','ExpressionLanguageSin.py',231),
  ('expression -> call','expression',1,'p_expression_call','ExpressionLanguageSin.py',235),
  ('expression -> FLOAT_NUMBER','expression',1,'p_expression_FLOAT_NUMBER','ExpressionLanguageSin.py',239),
  ('expression -> DOUBLE_NUMBER','expression',1,'p_expression_DOUBLE_NUMBER','ExpressionLanguageSin.py',243),
  ('expression -> INT_NUMBER','expression',1,'p_expression_INT_NUMBER','ExpressionLanguageSin.py',247),
  ('expression -> STRING','expression',1,'p_expression_STRING','ExpressionLanguageSin.py',251),
  ('expression -> ID','expression',1,'p_expression_ID','ExpressionLanguageSin.py',255),
  ('expression -> NEW type LPAREN params_call RPAREN','expression',5,'p_expression_new','ExpressionLanguageSin.py',259),
  ('expression -> NEW type LBRACKET expression RBRACKET','expression',5,'p_expression_new_list','ExpressionLanguageSin.py',263),
  ('operator -> expression TIMES expression','operator',3,'p_operator_arithmetic_times','ExpressionLanguageSin.py',270),
  ('operator -> expression DIVIDE expression','operator',3,'p_operator_arithmetic_divide','ExpressionLanguageSin.py',274),
  ('operator -> expression MODULE expression','operator',3,'p_operator_arithmetic_module','ExpressionLanguageSin.py',278),
  ('operator -> expression PLUS expression','operator',3,'p_operator_arithmetic_plus','ExpressionLanguageSin.py',282),
  ('operator -> expression MINUS expression','operator',3,'p_operator_arithmetic_minus','ExpressionLanguageSin.py',286),
  ('operator -> ID EQUAL expression','operator',3,'p_operator_assign_EQUAL','ExpressionLanguageSin.py',290),
  ('operator -> ID MINUS_EQ expression','operator',3,'p_operator_assign_MINUS_EQ','ExpressionLanguageSin.py',294),
  ('operator -> ID TIMES_EQ expression','operator',3,'p_operator_assign_TIMES_EQ','ExpressionLanguageSin.py',298),
  ('operator -> ID PLUS_EQ expression','operator',3,'p_operator_assign_PLUS_EQ','ExpressionLanguageSin.py',302),
  ('operator -> ID DIVIDE_EQ expression','operator',3,'p_operator_assign_DIVIDE_EQ','ExpressionLanguageSin.py',306),
  ('operator -> ID MOD_EQ expression','operator',3,'p_operator_assign_MOD_EQ','ExpressionLanguageSin.py',310),
  ('operator -> ID BITWISE_AND_EQ expression','operator',3,'p_operator_assign_BITWISE_AND_EQ','ExpressionLanguageSin.py',314),
  ('operator -> ID BITWISE_OR_EQ expression','operator',3,'p_operator_assign_BITWISE_OR_EQ','ExpressionLanguageSin.py',318),
  ('operator -> ID BITWISE_XOR_EQ expression','operator',3,'p_operator_assign_BITWISE_XOR_EQ','ExpressionLanguageSin.py',322),
  ('operator -> ID URSHIFT_EQ expression','operator',3,'p_operator_assign_URSHIFT_EQ','ExpressionLanguageSin.py',326),
  ('operator -> ID LSHIFT_EQ expression','operator',3,'p_operator_assign_LSHIFT_EQ','ExpressionLanguageSin.py',330),
  ('operator -> ID RSHIFT_EQ expression','operator',3,'p_operator_assign_RSHIFT_EQ','ExpressionLanguageSin.py',334),
  ('operator -> expression LEQ expression','operator',3,'p_operator_operatorcomparator_LEQ','ExpressionLanguageSin.py',339),
  ('operator -> expression GEQ expression','operator',3,'p_operator_operatorcomparator_GEQ','ExpressionLanguageSin.py',343),
  ('operator -> expression LT expression','operator',3,'p_operator_operatorcomparator_LT','ExpressionLanguageSin.py',347),
  ('operator -> expression GT expression','operator',3,'p_operator_operatorcomparator_GT','ExpressionLanguageSin.py',351),
  ('operator -> expression NEQ expression','operator',3,'p_operator_operatorcomparator_NEQ','ExpressionLanguageSin.py',355),
  ('operator -> expression EQ expression','operator',3,'p_operator_operatorcomparator_EQ','ExpressionLanguageSin.py',359),
  ('operator -> expression AND expression','operator',3,'p_operator_operatorcomparator_AND','ExpressionLanguageSin.py',363),
  ('operator -> expression OR expression','operator',3,'p_operator_operatorcomparator_OR','ExpressionLanguageSin.py',367),
  ('operator -> expression BITWISE_AND expression','operator',3,'p_operator_operatorcomparator_BITWISE_AND','ExpressionLanguageSin.py',371),
  ('operator -> expression BITWISE_OR expression','operator',3,'p_operator_operatorcomparator_BITWISE_OR','ExpressionLanguageSin.py',375),
  ('operator -> expression BITWISE_XOR expression','operator',3,'p_operator_operatorcomparator_BITWISE_XOR','ExpressionLanguageSin.py',379),
  ('operator -> unaryoperatorprefx ID','operator',2,'p_operator_unaryoperatorprefx','ExpressionLanguageSin.py',384),
  ('operator -> ID unaryoperatorsufx','operator',2,'p_operator_unaryoperatorsufx','ExpressionLanguageSin.py',388),
  ('operator -> expression operatorbittobit','operator',2,'p_operator_operatorbittobit','ExpressionLanguageSin.py',392),
  ('unaryoperatorprefx -> INCREMENT','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',398),
  ('unaryoperatorprefx -> DECREMENT','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',399),
  ('unaryoperatorprefx -> MINUS','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',400),
  ('unaryoperatorprefx -> PLUS','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',401),
  ('unaryoperatorprefx -> NOT','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',402),
  ('unaryoperatorsufx -> INCREMENT','unaryoperatorsufx',1,'p_unaryoperatorsufx','ExpressionLanguageSin.py',407),
  ('unaryoperatorsufx -> DECREMENT','unaryoperatorsufx',1,'p_unaryoperatorsufx','ExpressionLanguageSin.py',408),
  ('operatorbittobit -> URSHIFT','operatorbittobit',1,'p_operatorbittobit','ExpressionLanguageSin.py',414),
  ('operatorbittobit -> LSHIFT','operatorbittobit',1,'p_operatorbittobit','ExpressionLanguageSin.py',415),
  ('operatorbittobit -> RSHIFT','operatorbittobit',1,'p_operatorbittobit','ExpressionLanguageSin.py',416),
  ('brackets_expression -> LBRACKET RBRACKET','brackets_expression',2,'p_brackets_expression','ExpressionLanguageSin.py',423),
  ('brackets_expression -> LBRACKET INT_NUMBER RBRACKET','brackets_expression',3,'p_brackets_expression','ExpressionLanguageSin.py',424),
  ('brackets_expression -> LBRACKET ID RBRACKET','brackets_expression',3,'p_brackets_expression','ExpressionLanguageSin.py',425),
  ('type -> primitivetypes','type',1,'p_type','ExpressionLanguageSin.py',430),
  ('primitivetypes -> TYPE_INT','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',434),
  ('primitivetypes -> TYPE_FLOAT','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',435),
  ('primitivetypes -> TYPE_DOUBLE','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',436),
  ('primitivetypes -> TYPE_BYTE','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',437),
  ('primitivetypes -> TYPE_BOOLEAN','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',438),
  ('primitivetypes -> TYPE_CHAR','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',439),
  ('primitivetypes -> TYPE_STRING','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',440),
  ('primitivetypes -> TYPE_LONG','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',441),
  ('primitivetypes -> TYPE_VOID','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',442),
  ('call -> ID LPAREN params_call RPAREN','call',4,'p_call','ExpressionLanguageSin.py',450),
  ('call -> ID LPAREN RPAREN','call',3,'p_call_default','ExpressionLanguageSin.py',454),
  ('params_call -> expression COMMA params_call','params_call',3,'p_params_multi','ExpressionLanguageSin.py',458),
  ('params_call -> expression','params_call',1,'p_params_unique','ExpressionLanguageSin.py',462),
]
