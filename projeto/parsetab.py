
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALMINUS_EQTIMES_EQPLUS_EQDIVIDE_EQMOD_EQBITWISE_AND_EQBITWISE_OR_EQBITWISE_XOR_EQURSHIFT_EQLSHIFT_EQRSHIFT_EQleftORleftANDleftBITWISE_ORleftBITWISE_XORleftBITWISE_ANDleftEQNEQleftLTGTLEQGEQleftLSHIFTRSHIFTURSHIFTleftPLUSMINUSleftTIMESDIVIDEMODULEleftLINCREMENTLDECREMENTUPLUSUMINUSNOTleftRINCREMENTRDECREMENTABSTRACT AND ASSERT BIN_NUMBER BITWISE_AND BITWISE_AND_EQ BITWISE_NOT BITWISE_OR BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_EQ BREAK BYTE_NUMBER CASE CATCH CHAR CLASS COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQ DO DOT DOUBLE_NUMBER ELSE ENUM EQ EQUAL EXTENDS FINAL FINALLY FLOAT_NUMBER FOR GEQ GOTO GT HEXA_NUMBER ID IF IMPLEMENTS IMPORT INCREMENT INSTANCEOF INTERFACE INT_NUMBER LBRACKET LCHAV LEQ LONG_NUMBER LPAREN LSHIFT LSHIFT_EQ LT MINUS MINUS_EQ MODULE MOD_EQ NATIVE NEQ NEW NOT OCTAL_NUMBER OR PACKAGE PLUS PLUS_EQ POT PRIVATE PROTECTED PUBLIC RBRACKET RCHAV RETURN RPAREN RSHIFT RSHIFT_EQ SEMICOLON SHORT STATIC STRICTFP STRING SUPER SWITCH SYNCHRONIZED TERNARY THIS THROW THROWS TIMES TIMES_EQ TRANSIENT TRY TYPE_BOOLEAN TYPE_BYTE TYPE_CHAR TYPE_DOUBLE TYPE_FLOAT TYPE_INT TYPE_LONG TYPE_STRING TYPE_VOID URSHIFT URSHIFT_EQ VOLATILE WHILE program : class class : visibility classmodifier CLASS ID EXTENDS ID LCHAV membros RCHAVclass : visibility classmodifier CLASS ID LCHAV membros RCHAV class : visibility classmodifier CLASS ID IMPLEMENTS LCHAV membros RCHAV visibility : PUBLIC visibility : PRIVATE visibility : PROTECTED visibility : classmodifier : classmodifier : ABSTRACTclassmodifier : FINALclassmodifier : PACKAGEmembros : membromembros : membro membrosmembro : atributemembro : functionatribute : visibility atributemodifier type ID SEMICOLONatribute : visibility atributemodifier type ID EQUAL expression SEMICOLONatributemodifier : atributemodifier : STATICatributemodifier : FINALfunction : signature body signature : visibility atributemodifier type ID LPAREN sigparams RPAREN  signature : visibility atributemodifier type brackets_expression ID LPAREN sigparams RPAREN sigparams : type ID  sigparams : type ID COMMA sigparamsbody : LCHAV stms RCHAVstms : stm stms : stm stms stm : expression SEMICOLONstm : WHILE LPAREN expression RPAREN bodyorstmstm : DO bodyorstm WHILE LPAREN expression RPAREN SEMICOLON stm : FOR LPAREN expression SEMICOLON expression SEMICOLON expression SEMICOLON RPAREN bodyorstmstm : IF LPAREN expression RPAREN bodyorstmstm : IF LPAREN expression RPAREN bodyorstm ELSE bodyorstmstm : IF LPAREN expression RPAREN bodyorstm ELSE IF bodyorstmstm : SEMICOLON stm : atributemodifier type ID SEMICOLONstm : atributemodifier type ID EQUAL expression SEMICOLONstm : RETURN expression SEMICOLONstm : RETURN SEMICOLONbodyorstm : body expression : operator  expression : call  expression : FLOAT_NUMBER  expression : DOUBLE_NUMBER  expression : INT_NUMBER  expression : STRING  expression : ID  expression : NEW type LPAREN params_call RPAREN expression : NEW type LBRACKET expression RBRACKET operator : expression TIMES expressionoperator : expression DIVIDE expressionoperator : expression MODULE expressionoperator : expression PLUS expressionoperator : expression MINUS expressionoperator : ID EQUAL expressionoperator : ID MINUS_EQ expressionoperator : ID TIMES_EQ expressionoperator : ID PLUS_EQ expressionoperator : ID DIVIDE_EQ expressionoperator : ID MOD_EQ expressionoperator : ID BITWISE_AND_EQ expressionoperator : ID BITWISE_OR_EQ expressionoperator : ID BITWISE_XOR_EQ expressionoperator : ID URSHIFT_EQ expressionoperator : ID LSHIFT_EQ expressionoperator : ID RSHIFT_EQ expressionoperator : expression LEQ expressionoperator : expression GEQ expressionoperator : expression LT expressionoperator : expression GT expressionoperator : expression NEQ expressionoperator : expression EQ expressionoperator : expression AND expressionoperator : expression OR expressionoperator : expression BITWISE_AND expressionoperator : expression BITWISE_OR expressionoperator : expression BITWISE_XOR expressionoperator : unaryoperatorprefx IDoperator : ID unaryoperatorsufxoperator : expression operatorbittobit\n    unaryoperatorprefx : INCREMENT %prec LINCREMENT\n                        | DECREMENT %prec LDECREMENT\n                        | MINUS %prec UMINUS\n                        | PLUS %prec UPLUS\n                        | NOT\n    \n    unaryoperatorsufx : INCREMENT %prec RINCREMENT\n                        | DECREMENT %prec RDECREMENT\n    \n    operatorbittobit : URSHIFT\n                        | LSHIFT\n                        | RSHIFT\n    \n     brackets_expression : LBRACKET RBRACKET\n                            | LBRACKET INT_NUMBER RBRACKET\n                            | LBRACKET ID RBRACKET\n     type : primitivetypesprimitivetypes : TYPE_INT\n                        | TYPE_FLOAT\n                        | TYPE_DOUBLE\n                        | TYPE_BYTE\n                        | TYPE_BOOLEAN\n                        | TYPE_CHAR\n                        | TYPE_STRING\n                        | TYPE_LONG\n                        | TYPE_VOID\n\n     call : ID LPAREN params_call RPAREN call : ID LPAREN RPAREN params_call : expression COMMA params_call params_call : expression'
    
_lr_action_items = {'PUBLIC':([0,14,19,20,21,23,24,30,74,123,185,],[4,4,4,-15,-16,4,4,-22,-27,-17,-18,]),'PRIVATE':([0,14,19,20,21,23,24,30,74,123,185,],[5,5,5,-15,-16,5,5,-22,-27,-17,-18,]),'PROTECTED':([0,14,19,20,21,23,24,30,74,123,185,],[6,6,6,-15,-16,6,6,-22,-27,-17,-18,]),'ABSTRACT':([0,3,4,5,6,],[-8,8,-5,-6,-7,]),'FINAL':([0,3,4,5,6,14,17,19,20,21,23,24,30,31,46,48,74,76,99,120,123,166,179,185,189,192,202,204,207,209,211,],[-8,9,-5,-6,-7,-8,27,-8,-15,-16,-8,-8,-22,27,27,-37,-27,-30,-42,-41,-17,-40,-38,-18,-31,-34,-39,-32,-35,-36,-33,]),'PACKAGE':([0,3,4,5,6,],[-8,10,-5,-6,-7,]),'CLASS':([0,3,4,5,6,7,8,9,10,],[-8,-9,-5,-6,-7,11,-10,-11,-12,]),'$end':([1,2,28,69,70,],[0,-1,-3,-4,-2,]),'STATIC':([4,5,6,14,17,19,20,21,23,24,30,31,46,48,74,76,99,120,123,166,179,185,189,192,202,204,207,209,211,],[-5,-6,-7,-8,26,-8,-15,-16,-8,-8,-22,26,26,-37,-27,-30,-42,-41,-17,-40,-38,-18,-31,-34,-39,-32,-35,-36,-33,]),'TYPE_INT':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,120,123,125,166,172,179,185,189,192,197,202,204,207,209,211,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,36,-20,-21,-22,-19,-19,-37,36,36,-27,-30,-42,-41,-17,36,-40,36,-38,-18,-31,-34,36,-39,-32,-35,-36,-33,]),'TYPE_FLOAT':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,120,123,125,166,172,179,185,189,192,197,202,204,207,209,211,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,37,-20,-21,-22,-19,-19,-37,37,37,-27,-30,-42,-41,-17,37,-40,37,-38,-18,-31,-34,37,-39,-32,-35,-36,-33,]),'TYPE_DOUBLE':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,120,123,125,166,172,179,185,189,192,197,202,204,207,209,211,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,38,-20,-21,-22,-19,-19,-37,38,38,-27,-30,-42,-41,-17,38,-40,38,-38,-18,-31,-34,38,-39,-32,-35,-36,-33,]),'TYPE_BYTE':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,120,123,125,166,172,179,185,189,192,197,202,204,207,209,211,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,39,-20,-21,-22,-19,-19,-37,39,39,-27,-30,-42,-41,-17,39,-40,39,-38,-18,-31,-34,39,-39,-32,-35,-36,-33,]),'TYPE_BOOLEAN':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,120,123,125,166,172,179,185,189,192,197,202,204,207,209,211,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,40,-20,-21,-22,-19,-19,-37,40,40,-27,-30,-42,-41,-17,40,-40,40,-38,-18,-31,-34,40,-39,-32,-35,-36,-33,]),'TYPE_CHAR':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,120,123,125,166,172,179,185,189,192,197,202,204,207,209,211,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,41,-20,-21,-22,-19,-19,-37,41,41,-27,-30,-42,-41,-17,41,-40,41,-38,-18,-31,-34,41,-39,-32,-35,-36,-33,]),'TYPE_STRING':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,120,123,125,166,172,179,185,189,192,197,202,204,207,209,211,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,42,-20,-21,-22,-19,-19,-37,42,42,-27,-30,-42,-41,-17,42,-40,42,-38,-18,-31,-34,42,-39,-32,-35,-36,-33,]),'TYPE_LONG':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,120,123,125,166,172,179,185,189,192,197,202,204,207,209,211,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,43,-20,-21,-22,-19,-19,-37,43,43,-27,-30,-42,-41,-17,43,-40,43,-38,-18,-31,-34,43,-39,-32,-35,-36,-33,]),'TYPE_VOID':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,62,74,76,99,120,123,125,166,172,179,185,189,192,197,202,204,207,209,211,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,44,-20,-21,-22,-19,-19,-37,44,44,-27,-30,-42,-41,-17,44,-40,44,-38,-18,-31,-34,44,-39,-32,-35,-36,-33,]),'ID':([11,13,31,34,35,36,37,38,39,40,41,42,43,44,46,48,55,63,64,65,66,67,68,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,127,166,167,168,170,173,174,176,177,179,180,182,189,192,200,202,204,207,209,211,],[12,16,54,71,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,54,-37,54,-86,-85,122,-83,-84,-87,126,129,-27,-30,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-42,54,54,150,54,54,54,54,54,54,54,54,54,54,54,54,54,-41,54,-93,-40,54,54,186,-94,-95,54,54,-38,54,54,-31,-34,54,-39,-32,-35,-36,-33,]),'EXTENDS':([12,],[13,]),'LCHAV':([12,15,16,22,50,175,178,187,198,201,206,210,],[14,23,24,31,31,31,31,-23,-24,31,31,31,]),'IMPLEMENTS':([12,],[15,]),'RCHAV':([18,19,20,21,29,30,32,33,45,46,48,74,75,76,99,120,123,166,179,185,189,192,202,204,207,209,211,],[28,-13,-15,-16,-14,-22,69,70,74,-28,-37,-27,-29,-30,-42,-41,-17,-40,-38,-18,-31,-34,-39,-32,-35,-36,-33,]),'WHILE':([31,46,48,74,76,98,99,120,166,179,189,192,202,204,207,209,211,],[49,49,-37,-27,-30,147,-42,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'DO':([31,46,48,74,76,99,120,166,179,189,192,202,204,207,209,211,],[50,50,-37,-27,-30,-42,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'FOR':([31,46,48,74,76,99,120,166,179,189,192,202,204,207,209,211,],[51,51,-37,-27,-30,-42,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'IF':([31,46,48,74,76,99,120,166,179,189,192,201,202,204,207,209,211,],[52,52,-37,-27,-30,-42,-41,-40,-38,-31,-34,206,-39,-32,-35,-36,-33,]),'SEMICOLON':([31,46,47,48,54,55,56,57,58,59,60,61,71,74,76,93,94,95,96,99,115,117,118,119,120,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,169,179,181,189,191,192,193,195,196,199,202,204,205,207,209,211,],[48,48,76,-37,-49,120,-43,-44,-45,-46,-47,-48,123,-27,-30,-82,-90,-91,-92,-42,-81,-88,-89,166,-41,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,177,179,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-107,-40,185,-38,-106,-31,200,-34,202,-50,-51,204,-39,-32,208,-35,-36,-33,]),'RETURN':([31,46,48,74,76,99,120,166,179,189,192,202,204,207,209,211,],[55,55,-37,-27,-30,-42,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'FLOAT_NUMBER':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,166,167,168,176,177,179,180,182,189,192,200,202,204,207,209,211,],[58,58,-37,58,-27,-30,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-42,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-41,58,-40,58,58,58,58,-38,58,58,-31,-34,58,-39,-32,-35,-36,-33,]),'DOUBLE_NUMBER':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,166,167,168,176,177,179,180,182,189,192,200,202,204,207,209,211,],[59,59,-37,59,-27,-30,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-42,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-41,59,-40,59,59,59,59,-38,59,59,-31,-34,59,-39,-32,-35,-36,-33,]),'INT_NUMBER':([31,46,48,55,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,166,167,168,176,177,179,180,182,189,192,200,202,204,207,209,211,],[60,60,-37,60,128,-27,-30,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-42,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-41,60,-40,60,60,60,60,-38,60,60,-31,-34,60,-39,-32,-35,-36,-33,]),'STRING':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,166,167,168,176,177,179,180,182,189,192,200,202,204,207,209,211,],[61,61,-37,61,-27,-30,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-42,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-41,61,-40,61,61,61,61,-38,61,61,-31,-34,61,-39,-32,-35,-36,-33,]),'NEW':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,166,167,168,176,177,179,180,182,189,192,200,202,204,207,209,211,],[62,62,-37,62,-27,-30,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-42,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-41,62,-40,62,62,62,62,-38,62,62,-31,-34,62,-39,-32,-35,-36,-33,]),'INCREMENT':([31,46,48,54,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,166,167,168,176,177,179,180,182,189,192,200,202,204,207,209,211,],[66,66,-37,117,66,-27,-30,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-42,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-41,66,-40,66,66,66,66,-38,66,66,-31,-34,66,-39,-32,-35,-36,-33,]),'DECREMENT':([31,46,48,54,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,166,167,168,176,177,179,180,182,189,192,200,202,204,207,209,211,],[67,67,-37,118,67,-27,-30,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-42,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-41,67,-40,67,67,67,67,-38,67,67,-31,-34,67,-39,-32,-35,-36,-33,]),'MINUS':([31,46,47,48,54,55,56,57,58,59,60,61,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,124,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,176,177,179,180,181,182,184,189,190,191,192,193,195,196,200,202,204,205,207,209,211,],[64,64,81,-37,-49,64,-43,-44,-45,-46,-47,-48,-27,-30,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-82,-90,-91,-92,64,-42,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-81,64,-88,-89,81,-41,-80,64,-52,-53,-54,-55,-56,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-107,81,-40,64,64,81,64,64,-38,64,-106,64,81,-31,81,81,-34,81,-50,-51,64,-39,-32,81,-35,-36,-33,]),'PLUS':([31,46,47,48,54,55,56,57,58,59,60,61,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,124,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,176,177,179,180,181,182,184,189,190,191,192,193,195,196,200,202,204,205,207,209,211,],[63,63,80,-37,-49,63,-43,-44,-45,-46,-47,-48,-27,-30,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-82,-90,-91,-92,63,-42,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-81,63,-88,-89,80,-41,-80,63,-52,-53,-54,-55,-56,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-107,80,-40,63,63,80,63,63,-38,63,-106,63,80,-31,80,80,-34,80,-50,-51,63,-39,-32,80,-35,-36,-33,]),'NOT':([31,46,48,55,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,120,124,166,167,168,176,177,179,180,182,189,192,200,202,204,207,209,211,],[68,68,-37,68,-27,-30,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-42,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-41,68,-40,68,68,68,68,-38,68,68,-31,-34,68,-39,-32,-35,-36,-33,]),'LBRACKET':([34,35,36,37,38,39,40,41,42,43,44,121,],[73,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,168,]),'LPAREN':([35,36,37,38,39,40,41,42,43,44,49,51,52,54,71,121,126,147,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,97,100,101,116,125,167,172,176,]),'TIMES':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[77,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,77,-80,-52,-53,-54,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-107,77,77,-106,77,77,77,77,-50,-51,77,]),'DIVIDE':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[78,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,78,-80,-52,-53,-54,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-107,78,78,-106,78,78,78,78,-50,-51,78,]),'MODULE':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[79,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,79,-80,-52,-53,-54,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-107,79,79,-106,79,79,79,79,-50,-51,79,]),'LEQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[82,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,82,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-107,82,82,-106,82,82,82,82,-50,-51,82,]),'GEQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[83,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,83,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-107,83,83,-106,83,83,83,83,-50,-51,83,]),'LT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[84,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,84,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-107,84,84,-106,84,84,84,84,-50,-51,84,]),'GT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[85,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,85,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-107,85,85,-106,85,85,85,85,-50,-51,85,]),'NEQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[86,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,86,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,-73,-74,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-107,86,86,-106,86,86,86,86,-50,-51,86,]),'EQ':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[87,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,87,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,-73,-74,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-107,87,87,-106,87,87,87,87,-50,-51,87,]),'AND':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[88,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,88,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,-73,-74,-75,88,-77,-78,-79,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-107,88,88,-106,88,88,88,88,-50,-51,88,]),'OR':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[89,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,89,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-107,89,89,-106,89,89,89,89,-50,-51,89,]),'BITWISE_AND':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[90,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,90,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,-73,-74,90,90,-77,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-107,90,90,-106,90,90,90,90,-50,-51,90,]),'BITWISE_OR':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[91,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,91,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,-73,-74,91,91,-77,-78,-79,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-107,91,91,-106,91,91,91,91,-50,-51,91,]),'BITWISE_XOR':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[92,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,92,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,-73,-74,92,92,-77,92,-79,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-107,92,92,-106,92,92,92,92,-50,-51,92,]),'URSHIFT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[94,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,94,-80,-52,-53,-54,-55,-56,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-107,94,94,-106,94,94,94,94,-50,-51,94,]),'LSHIFT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[95,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,95,-80,-52,-53,-54,-55,-56,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-107,95,95,-106,95,95,95,95,-50,-51,95,]),'RSHIFT':([47,54,56,57,58,59,60,61,93,94,95,96,115,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,164,165,169,181,184,190,191,193,195,196,205,],[96,-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,96,-80,-52,-53,-54,-55,-56,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-107,96,96,-106,96,96,96,96,-50,-51,96,]),'RPAREN':([54,56,57,58,59,60,61,93,94,95,96,115,116,117,118,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,171,181,183,186,188,190,194,195,196,203,208,],[-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,164,-88,-89,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,175,178,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,181,-107,-109,187,-106,195,-25,198,199,-108,-50,-51,-26,210,]),'COMMA':([54,56,57,58,59,60,61,93,94,95,96,115,117,118,122,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,152,153,154,155,156,157,158,159,160,161,162,164,165,181,186,195,196,],[-49,-43,-44,-45,-46,-47,-48,-82,-90,-91,-92,-81,-88,-89,-80,-52,-53,-54,-55,-56,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-107,182,-106,197,-50,-51,]),'RBRACKET':([54,56,57,58,59,60,61,73,93,94,95,96,115,117,118,122,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,151,152,153,154,155,156,157,158,159,160,161,162,164,181,184,195,196,],[-49,-43,-44,-45,-46,-47,-48,127,-82,-90,-91,-92,-81,-88,-89,-80,173,174,-52,-53,-54,-55,-56,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-79,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-107,-106,196,-50,-51,]),'EQUAL':([54,71,150,],[103,124,180,]),'MINUS_EQ':([54,],[104,]),'TIMES_EQ':([54,],[105,]),'PLUS_EQ':([54,],[106,]),'DIVIDE_EQ':([54,],[107,]),'MOD_EQ':([54,],[108,]),'BITWISE_AND_EQ':([54,],[109,]),'BITWISE_OR_EQ':([54,],[110,]),'BITWISE_XOR_EQ':([54,],[111,]),'URSHIFT_EQ':([54,],[112,]),'LSHIFT_EQ':([54,],[113,]),'RSHIFT_EQ':([54,],[114,]),'ELSE':([74,99,192,],[-27,-42,201,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'class':([0,],[2,]),'visibility':([0,14,19,23,24,],[3,17,17,17,17,]),'classmodifier':([3,],[7,]),'membros':([14,19,23,24,],[18,29,32,33,]),'membro':([14,19,23,24,],[19,19,19,19,]),'atribute':([14,19,23,24,],[20,20,20,20,]),'function':([14,19,23,24,],[21,21,21,21,]),'signature':([14,19,23,24,],[22,22,22,22,]),'atributemodifier':([17,31,46,],[25,53,53,]),'body':([22,50,175,178,201,206,210,],[30,99,99,99,99,99,99,]),'type':([25,53,62,125,172,197,],[34,102,121,170,170,170,]),'primitivetypes':([25,53,62,125,172,197,],[35,35,35,35,35,35,]),'stms':([31,46,],[45,75,]),'stm':([31,46,],[46,46,]),'expression':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,167,168,176,177,180,182,200,],[47,47,119,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,165,169,165,184,190,191,193,165,205,]),'operator':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,167,168,176,177,180,182,200,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'call':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,167,168,176,177,180,182,200,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unaryoperatorprefx':([31,46,55,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,100,101,103,104,105,106,107,108,109,110,111,112,113,114,116,124,167,168,176,177,180,182,200,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'brackets_expression':([34,],[72,]),'operatorbittobit':([47,119,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,156,157,158,159,160,161,162,165,169,184,190,191,193,205,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'bodyorstm':([50,175,178,201,206,210,],[98,189,192,207,209,211,]),'unaryoperatorsufx':([54,],[115,]),'params_call':([116,167,182,],[163,183,194,]),'sigparams':([125,172,197,],[171,188,203,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class','program',1,'p_program','ExpressionLanguageSin.py',23),
  ('class -> visibility classmodifier CLASS ID EXTENDS ID LCHAV membros RCHAV','class',9,'p_class_extends','ExpressionLanguageSin.py',28),
  ('class -> visibility classmodifier CLASS ID LCHAV membros RCHAV','class',7,'p_class_default','ExpressionLanguageSin.py',32),
  ('class -> visibility classmodifier CLASS ID IMPLEMENTS LCHAV membros RCHAV','class',8,'p_class_implements','ExpressionLanguageSin.py',36),
  ('visibility -> PUBLIC','visibility',1,'p_visibility_public','ExpressionLanguageSin.py',41),
  ('visibility -> PRIVATE','visibility',1,'p_visibility_private','ExpressionLanguageSin.py',45),
  ('visibility -> PROTECTED','visibility',1,'p_visibility_protected','ExpressionLanguageSin.py',49),
  ('visibility -> <empty>','visibility',0,'p_visibility_default','ExpressionLanguageSin.py',53),
  ('classmodifier -> <empty>','classmodifier',0,'p_classmodifier_default','ExpressionLanguageSin.py',58),
  ('classmodifier -> ABSTRACT','classmodifier',1,'p_classmodifier_abstract','ExpressionLanguageSin.py',62),
  ('classmodifier -> FINAL','classmodifier',1,'p_classmodifier_final','ExpressionLanguageSin.py',66),
  ('classmodifier -> PACKAGE','classmodifier',1,'p_classmodifier_package','ExpressionLanguageSin.py',70),
  ('membros -> membro','membros',1,'p_membros','ExpressionLanguageSin.py',75),
  ('membros -> membro membros','membros',2,'p_multimembros','ExpressionLanguageSin.py',79),
  ('membro -> atribute','membro',1,'p_membro_atribute','ExpressionLanguageSin.py',83),
  ('membro -> function','membro',1,'p_membrofunction','ExpressionLanguageSin.py',91),
  ('atribute -> visibility atributemodifier type ID SEMICOLON','atribute',5,'p_atribute','ExpressionLanguageSin.py',96),
  ('atribute -> visibility atributemodifier type ID EQUAL expression SEMICOLON','atribute',7,'p_atribute_inicialized_type','ExpressionLanguageSin.py',100),
  ('atributemodifier -> <empty>','atributemodifier',0,'p_atributemodifier_default','ExpressionLanguageSin.py',114),
  ('atributemodifier -> STATIC','atributemodifier',1,'p_atributemodifier_static','ExpressionLanguageSin.py',118),
  ('atributemodifier -> FINAL','atributemodifier',1,'p_atributemodifier_final','ExpressionLanguageSin.py',122),
  ('function -> signature body','function',2,'p_function','ExpressionLanguageSin.py',127),
  ('signature -> visibility atributemodifier type ID LPAREN sigparams RPAREN','signature',7,'p_signature','ExpressionLanguageSin.py',131),
  ('signature -> visibility atributemodifier type brackets_expression ID LPAREN sigparams RPAREN','signature',8,'p_signature_list','ExpressionLanguageSin.py',135),
  ('sigparams -> type ID','sigparams',2,'p_sigparams_id','ExpressionLanguageSin.py',139),
  ('sigparams -> type ID COMMA sigparams','sigparams',4,'p_sigparams_sigparams','ExpressionLanguageSin.py',143),
  ('body -> LCHAV stms RCHAV','body',3,'p_body','ExpressionLanguageSin.py',148),
  ('stms -> stm','stms',1,'p_stms','ExpressionLanguageSin.py',152),
  ('stms -> stm stms','stms',2,'p_multistms','ExpressionLanguageSin.py',156),
  ('stm -> expression SEMICOLON','stm',2,'p_stm_exp','ExpressionLanguageSin.py',160),
  ('stm -> WHILE LPAREN expression RPAREN bodyorstm','stm',5,'p_stm_while','ExpressionLanguageSin.py',164),
  ('stm -> DO bodyorstm WHILE LPAREN expression RPAREN SEMICOLON','stm',7,'p_stm_dowhile','ExpressionLanguageSin.py',168),
  ('stm -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression SEMICOLON RPAREN bodyorstm','stm',10,'p_stm_for','ExpressionLanguageSin.py',172),
  ('stm -> IF LPAREN expression RPAREN bodyorstm','stm',5,'p_stm_if','ExpressionLanguageSin.py',176),
  ('stm -> IF LPAREN expression RPAREN bodyorstm ELSE bodyorstm','stm',7,'p_stm_ifelse','ExpressionLanguageSin.py',180),
  ('stm -> IF LPAREN expression RPAREN bodyorstm ELSE IF bodyorstm','stm',8,'p_stm_elseif','ExpressionLanguageSin.py',184),
  ('stm -> SEMICOLON','stm',1,'p_stm_semicollon','ExpressionLanguageSin.py',188),
  ('stm -> atributemodifier type ID SEMICOLON','stm',4,'p_stm_variable','ExpressionLanguageSin.py',196),
  ('stm -> atributemodifier type ID EQUAL expression SEMICOLON','stm',6,'p_stm_variable_type','ExpressionLanguageSin.py',201),
  ('stm -> RETURN expression SEMICOLON','stm',3,'p_stm_return','ExpressionLanguageSin.py',205),
  ('stm -> RETURN SEMICOLON','stm',2,'p_stm_void_return','ExpressionLanguageSin.py',209),
  ('bodyorstm -> body','bodyorstm',1,'p_bodyorstm_body','ExpressionLanguageSin.py',213),
  ('expression -> operator','expression',1,'p_expression','ExpressionLanguageSin.py',219),
  ('expression -> call','expression',1,'p_expression_call','ExpressionLanguageSin.py',223),
  ('expression -> FLOAT_NUMBER','expression',1,'p_expression_FLOAT_NUMBER','ExpressionLanguageSin.py',227),
  ('expression -> DOUBLE_NUMBER','expression',1,'p_expression_DOUBLE_NUMBER','ExpressionLanguageSin.py',231),
  ('expression -> INT_NUMBER','expression',1,'p_expression_INT_NUMBER','ExpressionLanguageSin.py',235),
  ('expression -> STRING','expression',1,'p_expression_STRING','ExpressionLanguageSin.py',239),
  ('expression -> ID','expression',1,'p_expression_ID','ExpressionLanguageSin.py',243),
  ('expression -> NEW type LPAREN params_call RPAREN','expression',5,'p_expression_new','ExpressionLanguageSin.py',247),
  ('expression -> NEW type LBRACKET expression RBRACKET','expression',5,'p_expression_new_list','ExpressionLanguageSin.py',251),
  ('operator -> expression TIMES expression','operator',3,'p_operator_arithmetic_times','ExpressionLanguageSin.py',257),
  ('operator -> expression DIVIDE expression','operator',3,'p_operator_arithmetic_divide','ExpressionLanguageSin.py',261),
  ('operator -> expression MODULE expression','operator',3,'p_operator_arithmetic_module','ExpressionLanguageSin.py',265),
  ('operator -> expression PLUS expression','operator',3,'p_operator_arithmetic_plus','ExpressionLanguageSin.py',269),
  ('operator -> expression MINUS expression','operator',3,'p_operator_arithmetic_minus','ExpressionLanguageSin.py',273),
  ('operator -> ID EQUAL expression','operator',3,'p_operator_assign_EQUAL','ExpressionLanguageSin.py',277),
  ('operator -> ID MINUS_EQ expression','operator',3,'p_operator_assign_MINUS_EQ','ExpressionLanguageSin.py',281),
  ('operator -> ID TIMES_EQ expression','operator',3,'p_operator_assign_TIMES_EQ','ExpressionLanguageSin.py',285),
  ('operator -> ID PLUS_EQ expression','operator',3,'p_operator_assign_PLUS_EQ','ExpressionLanguageSin.py',289),
  ('operator -> ID DIVIDE_EQ expression','operator',3,'p_operator_assign_DIVIDE_EQ','ExpressionLanguageSin.py',293),
  ('operator -> ID MOD_EQ expression','operator',3,'p_operator_assign_MOD_EQ','ExpressionLanguageSin.py',297),
  ('operator -> ID BITWISE_AND_EQ expression','operator',3,'p_operator_assign_BITWISE_AND_EQ','ExpressionLanguageSin.py',301),
  ('operator -> ID BITWISE_OR_EQ expression','operator',3,'p_operator_assign_BITWISE_OR_EQ','ExpressionLanguageSin.py',305),
  ('operator -> ID BITWISE_XOR_EQ expression','operator',3,'p_operator_assign_BITWISE_XOR_EQ','ExpressionLanguageSin.py',309),
  ('operator -> ID URSHIFT_EQ expression','operator',3,'p_operator_assign_URSHIFT_EQ','ExpressionLanguageSin.py',313),
  ('operator -> ID LSHIFT_EQ expression','operator',3,'p_operator_assign_LSHIFT_EQ','ExpressionLanguageSin.py',317),
  ('operator -> ID RSHIFT_EQ expression','operator',3,'p_operator_assign_RSHIFT_EQ','ExpressionLanguageSin.py',321),
  ('operator -> expression LEQ expression','operator',3,'p_operator_operatorcomparator_LEQ','ExpressionLanguageSin.py',326),
  ('operator -> expression GEQ expression','operator',3,'p_operator_operatorcomparator_GEQ','ExpressionLanguageSin.py',330),
  ('operator -> expression LT expression','operator',3,'p_operator_operatorcomparator_LT','ExpressionLanguageSin.py',334),
  ('operator -> expression GT expression','operator',3,'p_operator_operatorcomparator_GT','ExpressionLanguageSin.py',338),
  ('operator -> expression NEQ expression','operator',3,'p_operator_operatorcomparator_NEQ','ExpressionLanguageSin.py',342),
  ('operator -> expression EQ expression','operator',3,'p_operator_operatorcomparator_EQ','ExpressionLanguageSin.py',346),
  ('operator -> expression AND expression','operator',3,'p_operator_operatorcomparator_AND','ExpressionLanguageSin.py',350),
  ('operator -> expression OR expression','operator',3,'p_operator_operatorcomparator_OR','ExpressionLanguageSin.py',354),
  ('operator -> expression BITWISE_AND expression','operator',3,'p_operator_operatorcomparator_BITWISE_AND','ExpressionLanguageSin.py',358),
  ('operator -> expression BITWISE_OR expression','operator',3,'p_operator_operatorcomparator_BITWISE_OR','ExpressionLanguageSin.py',362),
  ('operator -> expression BITWISE_XOR expression','operator',3,'p_operator_operatorcomparator_BITWISE_XOR','ExpressionLanguageSin.py',366),
  ('operator -> unaryoperatorprefx ID','operator',2,'p_operator_unaryoperatorprefx','ExpressionLanguageSin.py',371),
  ('operator -> ID unaryoperatorsufx','operator',2,'p_operator_unaryoperatorsufx','ExpressionLanguageSin.py',375),
  ('operator -> expression operatorbittobit','operator',2,'p_operator_operatorbittobit','ExpressionLanguageSin.py',379),
  ('unaryoperatorprefx -> INCREMENT','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',385),
  ('unaryoperatorprefx -> DECREMENT','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',386),
  ('unaryoperatorprefx -> MINUS','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',387),
  ('unaryoperatorprefx -> PLUS','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',388),
  ('unaryoperatorprefx -> NOT','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',389),
  ('unaryoperatorsufx -> INCREMENT','unaryoperatorsufx',1,'p_unaryoperatorsufx','ExpressionLanguageSin.py',394),
  ('unaryoperatorsufx -> DECREMENT','unaryoperatorsufx',1,'p_unaryoperatorsufx','ExpressionLanguageSin.py',395),
  ('operatorbittobit -> URSHIFT','operatorbittobit',1,'p_operatorbittobit','ExpressionLanguageSin.py',401),
  ('operatorbittobit -> LSHIFT','operatorbittobit',1,'p_operatorbittobit','ExpressionLanguageSin.py',402),
  ('operatorbittobit -> RSHIFT','operatorbittobit',1,'p_operatorbittobit','ExpressionLanguageSin.py',403),
  ('brackets_expression -> LBRACKET RBRACKET','brackets_expression',2,'p_brackets_expression','ExpressionLanguageSin.py',410),
  ('brackets_expression -> LBRACKET INT_NUMBER RBRACKET','brackets_expression',3,'p_brackets_expression','ExpressionLanguageSin.py',411),
  ('brackets_expression -> LBRACKET ID RBRACKET','brackets_expression',3,'p_brackets_expression','ExpressionLanguageSin.py',412),
  ('type -> primitivetypes','type',1,'p_type','ExpressionLanguageSin.py',417),
  ('primitivetypes -> TYPE_INT','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',421),
  ('primitivetypes -> TYPE_FLOAT','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',422),
  ('primitivetypes -> TYPE_DOUBLE','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',423),
  ('primitivetypes -> TYPE_BYTE','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',424),
  ('primitivetypes -> TYPE_BOOLEAN','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',425),
  ('primitivetypes -> TYPE_CHAR','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',426),
  ('primitivetypes -> TYPE_STRING','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',427),
  ('primitivetypes -> TYPE_LONG','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',428),
  ('primitivetypes -> TYPE_VOID','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',429),
  ('call -> ID LPAREN params_call RPAREN','call',4,'p_call','ExpressionLanguageSin.py',437),
  ('call -> ID LPAREN RPAREN','call',3,'p_call_default','ExpressionLanguageSin.py',441),
  ('params_call -> expression COMMA params_call','params_call',3,'p_params_multi','ExpressionLanguageSin.py',445),
  ('params_call -> expression','params_call',1,'p_params_unique','ExpressionLanguageSin.py',449),
]
