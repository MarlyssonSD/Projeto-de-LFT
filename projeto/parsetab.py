
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALMINUS_EQTIMES_EQPLUS_EQDIVIDE_EQMOD_EQBITWISE_AND_EQBITWISE_OR_EQBITWISE_XOR_EQURSHIFT_EQLSHIFT_EQRSHIFT_EQleftORleftANDleftBITWISE_ORleftBITWISE_XORleftBITWISE_ANDleftEQNEQleftLTGTLEQGEQleftLSHIFTRSHIFTURSHIFTleftPLUSMINUSleftTIMESDIVIDEMODULEleftLINCREMENTLDECREMENTUPLUSUMINUSNOTleftRINCREMENTRDECREMENTABSTRACT AND ASSERT BIN_NUMBER BITWISE_AND BITWISE_AND_EQ BITWISE_NOT BITWISE_OR BITWISE_OR_EQ BITWISE_XOR BITWISE_XOR_EQ BREAK BYTE_NUMBER CASE CATCH CHAR CLASS COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQ DO DOT DOUBLE_NUMBER ELSE ENUM EQ EQUAL EXTENDS FINAL FINALLY FLOAT_NUMBER FOR GEQ GOTO GT HEXA_NUMBER ID IF IMPLEMENTS IMPORT INCREMENT INSTANCEOF INTERFACE INT_NUMBER LBRACKET LCHAV LEQ LONG_NUMBER LPAREN LSHIFT LSHIFT_EQ LT MINUS MINUS_EQ MODULE MOD_EQ MULTICOMMENT NATIVE NEQ NEW NOT OCTAL_NUMBER OR PACKAGE PLUS PLUS_EQ POT PRIVATE PROTECTED PUBLIC RBRACKET RCHAV RETURN RPAREN RSHIFT RSHIFT_EQ SEMICOLON SHORT STATIC STRICTFP STRING SUPER SWITCH SYNCHRONIZED TERNARY THIS THROW THROWS TIMES TIMES_EQ TRANSIENT TRY TYPE_BOOLEAN TYPE_BYTE TYPE_CHAR TYPE_DOUBLE TYPE_FLOAT TYPE_INT TYPE_LONG TYPE_STRING TYPE_VOID UNICOMMENT URSHIFT URSHIFT_EQ VOLATILE WHILE program : class class : visibility classmodifier CLASS ID EXTENDS ID LCHAV membros RCHAVclass : visibility classmodifier CLASS ID LCHAV membros RCHAV class : visibility classmodifier CLASS ID IMPLEMENTS LCHAV membros RCHAV visibility : PUBLIC visibility : PRIVATE visibility : PROTECTED visibility : classmodifier : classmodifier : ABSTRACTclassmodifier : FINALclassmodifier : PACKAGEmembros : membromembros : membro membrosmembro : atributemembro : functionatribute : visibility atributemodifier type ID SEMICOLONatribute : visibility atributemodifier type ID EQUAL expression SEMICOLONatributemodifier : atributemodifier : STATICatributemodifier : FINALfunction : signature body signature : visibility atributemodifier type ID LPAREN sigparams RPAREN  signature : visibility atributemodifier type brackets_expression ID LPAREN sigparams RPAREN sigparams : type ID  sigparams : type ID COMMA sigparamsbody : LCHAV stms RCHAVstms : stm stms : stm stms stm : expression SEMICOLONstm : WHILE LPAREN expression RPAREN bodyorstmstm : DO bodyorstm WHILE LPAREN expression RPAREN SEMICOLON stm : FOR LPAREN expression SEMICOLON expression SEMICOLON expression SEMICOLON RPAREN bodyorstmstm : IF LPAREN expression RPAREN bodyorstmstm : IF LPAREN expression RPAREN bodyorstm ELSE bodyorstmstm : IF LPAREN expression RPAREN bodyorstm ELSE IF bodyorstmstm : SEMICOLON stm : atributemodifier type ID SEMICOLONstm : atributemodifier type ID EQUAL expression SEMICOLONstm : RETURN expression SEMICOLONbodyorstm : body expression : operator  expression : call  expression : FLOAT_NUMBER  expression : INT_NUMBER  expression : STRING  expression : ID  expression : NEW type LPAREN params_call RPAREN expression : NEW type LBRACKET expression RBRACKET operator : expression TIMES expressionoperator : expression DIVIDE expressionoperator : expression MODULE expressionoperator : expression PLUS expressionoperator : expression MINUS expressionoperator : ID EQUAL expressionoperator : ID MINUS_EQ expressionoperator : ID TIMES_EQ expressionoperator : ID PLUS_EQ expressionoperator : ID DIVIDE_EQ expressionoperator : ID MOD_EQ expressionoperator : ID BITWISE_AND_EQ expressionoperator : ID BITWISE_OR_EQ expressionoperator : ID BITWISE_XOR_EQ expressionoperator : ID URSHIFT_EQ expressionoperator : ID LSHIFT_EQ expressionoperator : ID RSHIFT_EQ expressionoperator : expression LEQ expressionoperator : expression GEQ expressionoperator : expression LT expressionoperator : expression GT expressionoperator : expression NEQ expressionoperator : expression EQ expressionoperator : expression AND expressionoperator : expression OR expressionoperator : expression BITWISE_AND expressionoperator : expression BITWISE_OR expressionoperator : expression BITWISE_XOR expressionoperator : unaryoperatorprefx IDoperator : ID unaryoperatorsufxoperator : expression operatorbittobit\n    unaryoperatorprefx : INCREMENT %prec LINCREMENT\n                        | DECREMENT %prec LDECREMENT\n                        | MINUS %prec UMINUS\n                        | PLUS %prec UPLUS\n                        | NOT\n    \n    unaryoperatorsufx : INCREMENT %prec RINCREMENT\n                        | DECREMENT %prec RDECREMENT\n    \n    operatorbittobit : URSHIFT\n                        | LSHIFT\n                        | RSHIFT\n    \n     brackets_expression : LBRACKET RBRACKET\n                            | LBRACKET INT_NUMBER RBRACKET\n                            | LBRACKET ID RBRACKET\n     type : primitivetypesprimitivetypes : TYPE_INT\n                        | TYPE_FLOAT\n                        | TYPE_DOUBLE\n                        | TYPE_BYTE\n                        | TYPE_BOOLEAN\n                        | TYPE_CHAR\n                        | TYPE_STRING\n                        | TYPE_LONG\n                        | TYPE_VOID\n\n     call : ID LPAREN params_call RPAREN call : ID LPAREN RPAREN params_call : expression COMMA params_call params_call : expression'
    
_lr_action_items = {'PUBLIC':([0,14,19,20,21,23,24,30,73,121,183,],[4,4,4,-15,-16,4,4,-22,-27,-17,-18,]),'PRIVATE':([0,14,19,20,21,23,24,30,73,121,183,],[5,5,5,-15,-16,5,5,-22,-27,-17,-18,]),'PROTECTED':([0,14,19,20,21,23,24,30,73,121,183,],[6,6,6,-15,-16,6,6,-22,-27,-17,-18,]),'ABSTRACT':([0,3,4,5,6,],[-8,8,-5,-6,-7,]),'FINAL':([0,3,4,5,6,14,17,19,20,21,23,24,30,31,46,48,73,75,98,121,164,177,183,187,190,200,202,205,207,209,],[-8,9,-5,-6,-7,-8,27,-8,-15,-16,-8,-8,-22,27,27,-37,-27,-30,-41,-17,-40,-38,-18,-31,-34,-39,-32,-35,-36,-33,]),'PACKAGE':([0,3,4,5,6,],[-8,10,-5,-6,-7,]),'CLASS':([0,3,4,5,6,7,8,9,10,],[-8,-9,-5,-6,-7,11,-10,-11,-12,]),'$end':([1,2,28,68,69,],[0,-1,-3,-4,-2,]),'STATIC':([4,5,6,14,17,19,20,21,23,24,30,31,46,48,73,75,98,121,164,177,183,187,190,200,202,205,207,209,],[-5,-6,-7,-8,26,-8,-15,-16,-8,-8,-22,26,26,-37,-27,-30,-41,-17,-40,-38,-18,-31,-34,-39,-32,-35,-36,-33,]),'TYPE_INT':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,61,73,75,98,121,123,164,170,177,183,187,190,195,200,202,205,207,209,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,36,-20,-21,-22,-19,-19,-37,36,36,-27,-30,-41,-17,36,-40,36,-38,-18,-31,-34,36,-39,-32,-35,-36,-33,]),'TYPE_FLOAT':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,61,73,75,98,121,123,164,170,177,183,187,190,195,200,202,205,207,209,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,37,-20,-21,-22,-19,-19,-37,37,37,-27,-30,-41,-17,37,-40,37,-38,-18,-31,-34,37,-39,-32,-35,-36,-33,]),'TYPE_DOUBLE':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,61,73,75,98,121,123,164,170,177,183,187,190,195,200,202,205,207,209,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,38,-20,-21,-22,-19,-19,-37,38,38,-27,-30,-41,-17,38,-40,38,-38,-18,-31,-34,38,-39,-32,-35,-36,-33,]),'TYPE_BYTE':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,61,73,75,98,121,123,164,170,177,183,187,190,195,200,202,205,207,209,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,39,-20,-21,-22,-19,-19,-37,39,39,-27,-30,-41,-17,39,-40,39,-38,-18,-31,-34,39,-39,-32,-35,-36,-33,]),'TYPE_BOOLEAN':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,61,73,75,98,121,123,164,170,177,183,187,190,195,200,202,205,207,209,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,40,-20,-21,-22,-19,-19,-37,40,40,-27,-30,-41,-17,40,-40,40,-38,-18,-31,-34,40,-39,-32,-35,-36,-33,]),'TYPE_CHAR':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,61,73,75,98,121,123,164,170,177,183,187,190,195,200,202,205,207,209,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,41,-20,-21,-22,-19,-19,-37,41,41,-27,-30,-41,-17,41,-40,41,-38,-18,-31,-34,41,-39,-32,-35,-36,-33,]),'TYPE_STRING':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,61,73,75,98,121,123,164,170,177,183,187,190,195,200,202,205,207,209,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,42,-20,-21,-22,-19,-19,-37,42,42,-27,-30,-41,-17,42,-40,42,-38,-18,-31,-34,42,-39,-32,-35,-36,-33,]),'TYPE_LONG':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,61,73,75,98,121,123,164,170,177,183,187,190,195,200,202,205,207,209,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,43,-20,-21,-22,-19,-19,-37,43,43,-27,-30,-41,-17,43,-40,43,-38,-18,-31,-34,43,-39,-32,-35,-36,-33,]),'TYPE_VOID':([4,5,6,14,17,19,20,21,23,24,25,26,27,30,31,46,48,53,61,73,75,98,121,123,164,170,177,183,187,190,195,200,202,205,207,209,],[-5,-6,-7,-8,-19,-8,-15,-16,-8,-8,44,-20,-21,-22,-19,-19,-37,44,44,-27,-30,-41,-17,44,-40,44,-38,-18,-31,-34,44,-39,-32,-35,-36,-33,]),'ID':([11,13,31,34,35,36,37,38,39,40,41,42,43,44,46,48,55,62,63,64,65,66,67,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,122,125,164,165,166,168,171,172,174,175,177,178,180,187,190,198,200,202,205,207,209,],[12,16,54,70,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,54,-37,54,-84,-83,120,-81,-82,-85,124,127,-27,-30,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-41,54,54,148,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-91,-40,54,54,184,-92,-93,54,54,-38,54,54,-31,-34,54,-39,-32,-35,-36,-33,]),'EXTENDS':([12,],[13,]),'LCHAV':([12,15,16,22,50,173,176,185,196,199,204,208,],[14,23,24,31,31,31,31,-23,-24,31,31,31,]),'IMPLEMENTS':([12,],[15,]),'RCHAV':([18,19,20,21,29,30,32,33,45,46,48,73,74,75,98,121,164,177,183,187,190,200,202,205,207,209,],[28,-13,-15,-16,-14,-22,68,69,73,-28,-37,-27,-29,-30,-41,-17,-40,-38,-18,-31,-34,-39,-32,-35,-36,-33,]),'WHILE':([31,46,48,73,75,97,98,164,177,187,190,200,202,205,207,209,],[49,49,-37,-27,-30,145,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'DO':([31,46,48,73,75,98,164,177,187,190,200,202,205,207,209,],[50,50,-37,-27,-30,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'FOR':([31,46,48,73,75,98,164,177,187,190,200,202,205,207,209,],[51,51,-37,-27,-30,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'IF':([31,46,48,73,75,98,164,177,187,190,199,200,202,205,207,209,],[52,52,-37,-27,-30,-41,-40,-38,-31,-34,204,-39,-32,-35,-36,-33,]),'SEMICOLON':([31,46,47,48,54,56,57,58,59,60,70,73,75,92,93,94,95,98,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,164,167,177,179,187,189,190,191,193,194,197,200,202,203,205,207,209,],[48,48,75,-37,-47,-42,-43,-44,-45,-46,121,-27,-30,-80,-88,-89,-90,-41,-79,-86,-87,164,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,175,177,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-105,-40,183,-38,-104,-31,198,-34,200,-48,-49,202,-39,-32,206,-35,-36,-33,]),'RETURN':([31,46,48,73,75,98,164,177,187,190,200,202,205,207,209,],[55,55,-37,-27,-30,-41,-40,-38,-31,-34,-39,-32,-35,-36,-33,]),'FLOAT_NUMBER':([31,46,48,55,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,122,164,165,166,174,175,177,178,180,187,190,198,200,202,205,207,209,],[58,58,-37,58,-27,-30,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-41,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-40,58,58,58,58,-38,58,58,-31,-34,58,-39,-32,-35,-36,-33,]),'INT_NUMBER':([31,46,48,55,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,122,164,165,166,174,175,177,178,180,187,190,198,200,202,205,207,209,],[59,59,-37,59,126,-27,-30,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-41,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-40,59,59,59,59,-38,59,59,-31,-34,59,-39,-32,-35,-36,-33,]),'STRING':([31,46,48,55,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,122,164,165,166,174,175,177,178,180,187,190,198,200,202,205,207,209,],[60,60,-37,60,-27,-30,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-41,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-40,60,60,60,60,-38,60,60,-31,-34,60,-39,-32,-35,-36,-33,]),'NEW':([31,46,48,55,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,122,164,165,166,174,175,177,178,180,187,190,198,200,202,205,207,209,],[61,61,-37,61,-27,-30,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-41,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-40,61,61,61,61,-38,61,61,-31,-34,61,-39,-32,-35,-36,-33,]),'INCREMENT':([31,46,48,54,55,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,122,164,165,166,174,175,177,178,180,187,190,198,200,202,205,207,209,],[65,65,-37,116,65,-27,-30,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-41,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-40,65,65,65,65,-38,65,65,-31,-34,65,-39,-32,-35,-36,-33,]),'DECREMENT':([31,46,48,54,55,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,122,164,165,166,174,175,177,178,180,187,190,198,200,202,205,207,209,],[66,66,-37,117,66,-27,-30,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-41,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-40,66,66,66,66,-38,66,66,-31,-34,66,-39,-32,-35,-36,-33,]),'MINUS':([31,46,47,48,54,55,56,57,58,59,60,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,122,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,174,175,177,178,179,180,182,187,188,189,190,191,193,194,198,200,202,203,205,207,209,],[63,63,80,-37,-47,63,-42,-43,-44,-45,-46,-27,-30,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-80,-88,-89,-90,63,-41,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-79,63,-86,-87,80,-78,63,-50,-51,-52,-53,-54,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-105,80,-40,63,63,80,63,63,-38,63,-104,63,80,-31,80,80,-34,80,-48,-49,63,-39,-32,80,-35,-36,-33,]),'PLUS':([31,46,47,48,54,55,56,57,58,59,60,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,122,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,174,175,177,178,179,180,182,187,188,189,190,191,193,194,198,200,202,203,205,207,209,],[62,62,79,-37,-47,62,-42,-43,-44,-45,-46,-27,-30,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-80,-88,-89,-90,62,-41,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-79,62,-86,-87,79,-78,62,-50,-51,-52,-53,-54,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-105,79,-40,62,62,79,62,62,-38,62,-104,62,79,-31,79,79,-34,79,-48,-49,62,-39,-32,79,-35,-36,-33,]),'NOT':([31,46,48,55,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,122,164,165,166,174,175,177,178,180,187,190,198,200,202,205,207,209,],[67,67,-37,67,-27,-30,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-41,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-40,67,67,67,67,-38,67,67,-31,-34,67,-39,-32,-35,-36,-33,]),'LBRACKET':([34,35,36,37,38,39,40,41,42,43,44,119,],[72,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,166,]),'LPAREN':([35,36,37,38,39,40,41,42,43,44,49,51,52,54,70,119,124,145,],[-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,96,99,100,115,123,165,170,174,]),'TIMES':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[76,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,76,-78,-50,-51,-52,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-105,76,76,-104,76,76,76,76,-48,-49,76,]),'DIVIDE':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[77,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,77,-78,-50,-51,-52,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-105,77,77,-104,77,77,77,77,-48,-49,77,]),'MODULE':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[78,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,78,-78,-50,-51,-52,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-105,78,78,-104,78,78,78,78,-48,-49,78,]),'LEQ':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[81,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,81,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-105,81,81,-104,81,81,81,81,-48,-49,81,]),'GEQ':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[82,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,82,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-105,82,82,-104,82,82,82,82,-48,-49,82,]),'LT':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[83,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,83,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-105,83,83,-104,83,83,83,83,-48,-49,83,]),'GT':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[84,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,84,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-105,84,84,-104,84,84,84,84,-48,-49,84,]),'NEQ':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[85,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,85,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,-71,-72,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-105,85,85,-104,85,85,85,85,-48,-49,85,]),'EQ':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[86,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,86,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,-71,-72,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-105,86,86,-104,86,86,86,86,-48,-49,86,]),'AND':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[87,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,87,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,-71,-72,-73,87,-75,-76,-77,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-105,87,87,-104,87,87,87,87,-48,-49,87,]),'OR':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[88,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,88,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-105,88,88,-104,88,88,88,88,-48,-49,88,]),'BITWISE_AND':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[89,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,89,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,-71,-72,89,89,-75,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-105,89,89,-104,89,89,89,89,-48,-49,89,]),'BITWISE_OR':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[90,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,90,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,-71,-72,90,90,-75,-76,-77,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-105,90,90,-104,90,90,90,90,-48,-49,90,]),'BITWISE_XOR':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[91,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,91,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,-71,-72,91,91,-75,91,-77,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-105,91,91,-104,91,91,91,91,-48,-49,91,]),'URSHIFT':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[93,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,93,-78,-50,-51,-52,-53,-54,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-105,93,93,-104,93,93,93,93,-48,-49,93,]),'LSHIFT':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[94,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,94,-78,-50,-51,-52,-53,-54,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-105,94,94,-104,94,94,94,94,-48,-49,94,]),'RSHIFT':([47,54,56,57,58,59,60,92,93,94,95,114,116,117,118,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,179,182,188,189,191,193,194,203,],[95,-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,95,-78,-50,-51,-52,-53,-54,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-105,95,95,-104,95,95,95,95,-48,-49,95,]),'RPAREN':([54,56,57,58,59,60,92,93,94,95,114,115,116,117,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,169,179,181,184,186,188,192,193,194,201,206,],[-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,162,-86,-87,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,173,176,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,179,-105,-107,185,-104,193,-25,196,197,-106,-48,-49,-26,208,]),'COMMA':([54,56,57,58,59,60,92,93,94,95,114,116,117,120,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,150,151,152,153,154,155,156,157,158,159,160,162,163,179,184,193,194,],[-47,-42,-43,-44,-45,-46,-80,-88,-89,-90,-79,-86,-87,-78,-50,-51,-52,-53,-54,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-105,180,-104,195,-48,-49,]),'RBRACKET':([54,56,57,58,59,60,72,92,93,94,95,114,116,117,120,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,150,151,152,153,154,155,156,157,158,159,160,162,179,182,193,194,],[-47,-42,-43,-44,-45,-46,125,-80,-88,-89,-90,-79,-86,-87,-78,171,172,-50,-51,-52,-53,-54,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-105,-104,194,-48,-49,]),'EQUAL':([54,70,148,],[102,122,178,]),'MINUS_EQ':([54,],[103,]),'TIMES_EQ':([54,],[104,]),'PLUS_EQ':([54,],[105,]),'DIVIDE_EQ':([54,],[106,]),'MOD_EQ':([54,],[107,]),'BITWISE_AND_EQ':([54,],[108,]),'BITWISE_OR_EQ':([54,],[109,]),'BITWISE_XOR_EQ':([54,],[110,]),'URSHIFT_EQ':([54,],[111,]),'LSHIFT_EQ':([54,],[112,]),'RSHIFT_EQ':([54,],[113,]),'ELSE':([73,98,190,],[-27,-41,199,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'class':([0,],[2,]),'visibility':([0,14,19,23,24,],[3,17,17,17,17,]),'classmodifier':([3,],[7,]),'membros':([14,19,23,24,],[18,29,32,33,]),'membro':([14,19,23,24,],[19,19,19,19,]),'atribute':([14,19,23,24,],[20,20,20,20,]),'function':([14,19,23,24,],[21,21,21,21,]),'signature':([14,19,23,24,],[22,22,22,22,]),'atributemodifier':([17,31,46,],[25,53,53,]),'body':([22,50,173,176,199,204,208,],[30,98,98,98,98,98,98,]),'type':([25,53,61,123,170,195,],[34,101,119,168,168,168,]),'primitivetypes':([25,53,61,123,170,195,],[35,35,35,35,35,35,]),'stms':([31,46,],[45,74,]),'stm':([31,46,],[46,46,]),'expression':([31,46,55,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,122,165,166,174,175,178,180,198,],[47,47,118,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,163,167,163,182,188,189,191,163,203,]),'operator':([31,46,55,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,122,165,166,174,175,178,180,198,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'call':([31,46,55,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,122,165,166,174,175,178,180,198,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unaryoperatorprefx':([31,46,55,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,96,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,122,165,166,174,175,178,180,198,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'brackets_expression':([34,],[71,]),'operatorbittobit':([47,118,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,152,153,154,155,156,157,158,159,160,163,167,182,188,189,191,203,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'bodyorstm':([50,173,176,199,204,208,],[97,187,190,205,207,209,]),'unaryoperatorsufx':([54,],[114,]),'params_call':([115,165,180,],[161,181,192,]),'sigparams':([123,170,195,],[169,186,201,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class','program',1,'p_program','ExpressionLanguageSin.py',23),
  ('class -> visibility classmodifier CLASS ID EXTENDS ID LCHAV membros RCHAV','class',9,'p_class_extends','ExpressionLanguageSin.py',28),
  ('class -> visibility classmodifier CLASS ID LCHAV membros RCHAV','class',7,'p_class_default','ExpressionLanguageSin.py',32),
  ('class -> visibility classmodifier CLASS ID IMPLEMENTS LCHAV membros RCHAV','class',8,'p_class_implements','ExpressionLanguageSin.py',36),
  ('visibility -> PUBLIC','visibility',1,'p_visibility_public','ExpressionLanguageSin.py',41),
  ('visibility -> PRIVATE','visibility',1,'p_visibility_private','ExpressionLanguageSin.py',45),
  ('visibility -> PROTECTED','visibility',1,'p_visibility_protected','ExpressionLanguageSin.py',49),
  ('visibility -> <empty>','visibility',0,'p_visibility_default','ExpressionLanguageSin.py',53),
  ('classmodifier -> <empty>','classmodifier',0,'p_classmodifier_default','ExpressionLanguageSin.py',58),
  ('classmodifier -> ABSTRACT','classmodifier',1,'p_classmodifier_abstract','ExpressionLanguageSin.py',62),
  ('classmodifier -> FINAL','classmodifier',1,'p_classmodifier_final','ExpressionLanguageSin.py',66),
  ('classmodifier -> PACKAGE','classmodifier',1,'p_classmodifier_package','ExpressionLanguageSin.py',70),
  ('membros -> membro','membros',1,'p_membros','ExpressionLanguageSin.py',75),
  ('membros -> membro membros','membros',2,'p_multimembros','ExpressionLanguageSin.py',79),
  ('membro -> atribute','membro',1,'p_membro_atribute','ExpressionLanguageSin.py',83),
  ('membro -> function','membro',1,'p_membrofunction','ExpressionLanguageSin.py',87),
  ('atribute -> visibility atributemodifier type ID SEMICOLON','atribute',5,'p_atribute','ExpressionLanguageSin.py',92),
  ('atribute -> visibility atributemodifier type ID EQUAL expression SEMICOLON','atribute',7,'p_atribute_inicialized_type','ExpressionLanguageSin.py',96),
  ('atributemodifier -> <empty>','atributemodifier',0,'p_atributemodifier_default','ExpressionLanguageSin.py',100),
  ('atributemodifier -> STATIC','atributemodifier',1,'p_atributemodifier_static','ExpressionLanguageSin.py',104),
  ('atributemodifier -> FINAL','atributemodifier',1,'p_atributemodifier_final','ExpressionLanguageSin.py',108),
  ('function -> signature body','function',2,'p_function','ExpressionLanguageSin.py',113),
  ('signature -> visibility atributemodifier type ID LPAREN sigparams RPAREN','signature',7,'p_signature','ExpressionLanguageSin.py',117),
  ('signature -> visibility atributemodifier type brackets_expression ID LPAREN sigparams RPAREN','signature',8,'p_signature_list','ExpressionLanguageSin.py',121),
  ('sigparams -> type ID','sigparams',2,'p_sigparams_id','ExpressionLanguageSin.py',125),
  ('sigparams -> type ID COMMA sigparams','sigparams',4,'p_sigparams_sigparams','ExpressionLanguageSin.py',129),
  ('body -> LCHAV stms RCHAV','body',3,'p_body','ExpressionLanguageSin.py',134),
  ('stms -> stm','stms',1,'p_stms','ExpressionLanguageSin.py',138),
  ('stms -> stm stms','stms',2,'p_multistms','ExpressionLanguageSin.py',142),
  ('stm -> expression SEMICOLON','stm',2,'p_stm_exp','ExpressionLanguageSin.py',146),
  ('stm -> WHILE LPAREN expression RPAREN bodyorstm','stm',5,'p_stm_while','ExpressionLanguageSin.py',150),
  ('stm -> DO bodyorstm WHILE LPAREN expression RPAREN SEMICOLON','stm',7,'p_stm_dowhile','ExpressionLanguageSin.py',154),
  ('stm -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression SEMICOLON RPAREN bodyorstm','stm',10,'p_stm_for','ExpressionLanguageSin.py',158),
  ('stm -> IF LPAREN expression RPAREN bodyorstm','stm',5,'p_stm_if','ExpressionLanguageSin.py',162),
  ('stm -> IF LPAREN expression RPAREN bodyorstm ELSE bodyorstm','stm',7,'p_stm_ifelse','ExpressionLanguageSin.py',166),
  ('stm -> IF LPAREN expression RPAREN bodyorstm ELSE IF bodyorstm','stm',8,'p_stm_elseif','ExpressionLanguageSin.py',170),
  ('stm -> SEMICOLON','stm',1,'p_stm_semicollon','ExpressionLanguageSin.py',174),
  ('stm -> atributemodifier type ID SEMICOLON','stm',4,'p_stm_variable','ExpressionLanguageSin.py',182),
  ('stm -> atributemodifier type ID EQUAL expression SEMICOLON','stm',6,'p_stm_variable_type','ExpressionLanguageSin.py',187),
  ('stm -> RETURN expression SEMICOLON','stm',3,'p_stm_return','ExpressionLanguageSin.py',191),
  ('bodyorstm -> body','bodyorstm',1,'p_bodyorstm_body','ExpressionLanguageSin.py',201),
  ('expression -> operator','expression',1,'p_expression','ExpressionLanguageSin.py',207),
  ('expression -> call','expression',1,'p_expression_call','ExpressionLanguageSin.py',211),
  ('expression -> FLOAT_NUMBER','expression',1,'p_expression_FLOAT_NUMBER','ExpressionLanguageSin.py',215),
  ('expression -> INT_NUMBER','expression',1,'p_expression_INT_NUMBER','ExpressionLanguageSin.py',219),
  ('expression -> STRING','expression',1,'p_expression_STRING','ExpressionLanguageSin.py',223),
  ('expression -> ID','expression',1,'p_expression_ID','ExpressionLanguageSin.py',227),
  ('expression -> NEW type LPAREN params_call RPAREN','expression',5,'p_expression_new','ExpressionLanguageSin.py',231),
  ('expression -> NEW type LBRACKET expression RBRACKET','expression',5,'p_expression_new_list','ExpressionLanguageSin.py',235),
  ('operator -> expression TIMES expression','operator',3,'p_operator_arithmetic_times','ExpressionLanguageSin.py',241),
  ('operator -> expression DIVIDE expression','operator',3,'p_operator_arithmetic_divide','ExpressionLanguageSin.py',245),
  ('operator -> expression MODULE expression','operator',3,'p_operator_arithmetic_module','ExpressionLanguageSin.py',249),
  ('operator -> expression PLUS expression','operator',3,'p_operator_arithmetic_plus','ExpressionLanguageSin.py',253),
  ('operator -> expression MINUS expression','operator',3,'p_operator_arithmetic_minus','ExpressionLanguageSin.py',257),
  ('operator -> ID EQUAL expression','operator',3,'p_operator_assign_EQUAL','ExpressionLanguageSin.py',272),
  ('operator -> ID MINUS_EQ expression','operator',3,'p_operator_assign_MINUS_EQ','ExpressionLanguageSin.py',276),
  ('operator -> ID TIMES_EQ expression','operator',3,'p_operator_assign_TIMES_EQ','ExpressionLanguageSin.py',280),
  ('operator -> ID PLUS_EQ expression','operator',3,'p_operator_assign_PLUS_EQ','ExpressionLanguageSin.py',284),
  ('operator -> ID DIVIDE_EQ expression','operator',3,'p_operator_assign_DIVIDE_EQ','ExpressionLanguageSin.py',288),
  ('operator -> ID MOD_EQ expression','operator',3,'p_operator_assign_MOD_EQ','ExpressionLanguageSin.py',292),
  ('operator -> ID BITWISE_AND_EQ expression','operator',3,'p_operator_assign_BITWISE_AND_EQ','ExpressionLanguageSin.py',296),
  ('operator -> ID BITWISE_OR_EQ expression','operator',3,'p_operator_assign_BITWISE_OR_EQ','ExpressionLanguageSin.py',300),
  ('operator -> ID BITWISE_XOR_EQ expression','operator',3,'p_operator_assign_BITWISE_XOR_EQ','ExpressionLanguageSin.py',304),
  ('operator -> ID URSHIFT_EQ expression','operator',3,'p_operator_assign_URSHIFT_EQ','ExpressionLanguageSin.py',308),
  ('operator -> ID LSHIFT_EQ expression','operator',3,'p_operator_assign_LSHIFT_EQ','ExpressionLanguageSin.py',312),
  ('operator -> ID RSHIFT_EQ expression','operator',3,'p_operator_assign_RSHIFT_EQ','ExpressionLanguageSin.py',316),
  ('operator -> expression LEQ expression','operator',3,'p_operator_operatorcomparator_LEQ','ExpressionLanguageSin.py',339),
  ('operator -> expression GEQ expression','operator',3,'p_operator_operatorcomparator_GEQ','ExpressionLanguageSin.py',343),
  ('operator -> expression LT expression','operator',3,'p_operator_operatorcomparator_LT','ExpressionLanguageSin.py',347),
  ('operator -> expression GT expression','operator',3,'p_operator_operatorcomparator_GT','ExpressionLanguageSin.py',351),
  ('operator -> expression NEQ expression','operator',3,'p_operator_operatorcomparator_NEQ','ExpressionLanguageSin.py',355),
  ('operator -> expression EQ expression','operator',3,'p_operator_operatorcomparator_EQ','ExpressionLanguageSin.py',359),
  ('operator -> expression AND expression','operator',3,'p_operator_operatorcomparator_AND','ExpressionLanguageSin.py',363),
  ('operator -> expression OR expression','operator',3,'p_operator_operatorcomparator_OR','ExpressionLanguageSin.py',368),
  ('operator -> expression BITWISE_AND expression','operator',3,'p_operator_operatorcomparator_BITWISE_AND','ExpressionLanguageSin.py',373),
  ('operator -> expression BITWISE_OR expression','operator',3,'p_operator_operatorcomparator_BITWISE_OR','ExpressionLanguageSin.py',378),
  ('operator -> expression BITWISE_XOR expression','operator',3,'p_operator_operatorcomparator_BITWISE_XOR','ExpressionLanguageSin.py',382),
  ('operator -> unaryoperatorprefx ID','operator',2,'p_operator_unaryoperatorprefx','ExpressionLanguageSin.py',389),
  ('operator -> ID unaryoperatorsufx','operator',2,'p_operator_unaryoperatorsufx','ExpressionLanguageSin.py',393),
  ('operator -> expression operatorbittobit','operator',2,'p_operator_operatorbittobit','ExpressionLanguageSin.py',397),
  ('unaryoperatorprefx -> INCREMENT','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',421),
  ('unaryoperatorprefx -> DECREMENT','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',422),
  ('unaryoperatorprefx -> MINUS','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',423),
  ('unaryoperatorprefx -> PLUS','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',424),
  ('unaryoperatorprefx -> NOT','unaryoperatorprefx',1,'p_unaryoperatorprefx','ExpressionLanguageSin.py',425),
  ('unaryoperatorsufx -> INCREMENT','unaryoperatorsufx',1,'p_unaryoperatorsufx','ExpressionLanguageSin.py',430),
  ('unaryoperatorsufx -> DECREMENT','unaryoperatorsufx',1,'p_unaryoperatorsufx','ExpressionLanguageSin.py',431),
  ('operatorbittobit -> URSHIFT','operatorbittobit',1,'p_operatorbittobit','ExpressionLanguageSin.py',437),
  ('operatorbittobit -> LSHIFT','operatorbittobit',1,'p_operatorbittobit','ExpressionLanguageSin.py',438),
  ('operatorbittobit -> RSHIFT','operatorbittobit',1,'p_operatorbittobit','ExpressionLanguageSin.py',439),
  ('brackets_expression -> LBRACKET RBRACKET','brackets_expression',2,'p_brackets_expression','ExpressionLanguageSin.py',446),
  ('brackets_expression -> LBRACKET INT_NUMBER RBRACKET','brackets_expression',3,'p_brackets_expression','ExpressionLanguageSin.py',447),
  ('brackets_expression -> LBRACKET ID RBRACKET','brackets_expression',3,'p_brackets_expression','ExpressionLanguageSin.py',448),
  ('type -> primitivetypes','type',1,'p_type','ExpressionLanguageSin.py',453),
  ('primitivetypes -> TYPE_INT','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',457),
  ('primitivetypes -> TYPE_FLOAT','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',458),
  ('primitivetypes -> TYPE_DOUBLE','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',459),
  ('primitivetypes -> TYPE_BYTE','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',460),
  ('primitivetypes -> TYPE_BOOLEAN','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',461),
  ('primitivetypes -> TYPE_CHAR','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',462),
  ('primitivetypes -> TYPE_STRING','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',463),
  ('primitivetypes -> TYPE_LONG','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',464),
  ('primitivetypes -> TYPE_VOID','primitivetypes',1,'p_primitivetypes','ExpressionLanguageSin.py',465),
  ('call -> ID LPAREN params_call RPAREN','call',4,'p_call','ExpressionLanguageSin.py',473),
  ('call -> ID LPAREN RPAREN','call',3,'p_call_default','ExpressionLanguageSin.py',477),
  ('params_call -> expression COMMA params_call','params_call',3,'p_params_multi','ExpressionLanguageSin.py',481),
  ('params_call -> expression','params_call',1,'p_params_unique','ExpressionLanguageSin.py',485),
]
